// This is generated code. Should not be manually modified.

package omega

import (
	"time"
	"github.com/btcsuite/btcd/chaincfg/chainhash"
	"github.com/btcsuite/btcd/wire"
	"github.com/btcsuite/omega/token"
)

var IntlDateLine = [][2]float64 {	// international date line
	{ 90.000000, 180.000000 },
	{ 75.000000, 180.000000 },
	{ 68.245600, -169.000000 },
	{ 65.518900, -169.000000 },
	{ 53.086300, 170.050000 },
	{ 47.835300, 180.000000 },
	{ -1.200000, 180.000000 },
	{ -1.200000, -159.650000 },
	{ 2.900000, -159.650000 },
	{ 2.900000, -162.850000 },
	{ 6.500000, -162.850000 },
	{ 6.500000, -155.950000 },
	{ -9.500000, -149.650000 },
	{ -11.700000, -149.650000 },
	{ -11.700000, -154.050000 },
	{ -10.700000, -154.050000 },
	{ -10.700000, -166.550000 },
	{ -15.600000, -172.700000 },
	{ -45.000000, -172.700000 },
	{ -51.181500, 180.000000 },
	{ -90.000000, 180.000000 },
}

var InitDefs = []token.Definition{
	&token.VertexDef {
		Lat: 377487360,
		Lng: -754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 314572800,
		Lng: -754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 286242793,
		Lng: -708837376,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 274806184,
		Lng: -708837376,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 222660080,
		Lng: -796708044,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 200635790,
		Lng: -754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -5033164,
		Lng: -754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -5033164,
		Lng: -669620633,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 12163481,
		Lng: -669620633,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 12163481,
		Lng: -683042406,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 27262976,
		Lng: -683042406,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 27262976,
		Lng: -654101708,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -39845888,
		Lng: -627677593,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -49073356,
		Lng: -627677593,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -49073356,
		Lng: -646132531,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -44879052,
		Lng: -646132531,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -44879052,
		Lng: -698561331,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -65431142,
		Lng: -724356300,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -188743680,
		Lng: -724356300,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -214670770,
		Lng: -754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -377487360,
		Lng: -754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -377487360,
		Lng: 754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -214670770,
		Lng: 754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -188743680,
		Lng: 785593139,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -65431142,
		Lng: 785593139,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -44879052,
		Lng: 811388108,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -44879052,
		Lng: 863816908,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -49073356,
		Lng: 863816908,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -49073356,
		Lng: 882271846,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -39845888,
		Lng: 882271846,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 27262976,
		Lng: 855847731,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 27262976,
		Lng: 826907033,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 12163481,
		Lng: 826907033,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 12163481,
		Lng: 840328806,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -5033164,
		Lng: 840328806,
		Alt:0,
	},
	&token.VertexDef {
		Lat: -5033164,
		Lng: 754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 200635790,
		Lng: 754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 222660080,
		Lng: 713241395,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 274806184,
		Lng: 801112064,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 286242793,
		Lng: 801112064,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 314572800,
		Lng: 754974720,
		Alt:0,
	},
	&token.VertexDef {
		Lat: 377487360,
		Lng: 754974720,
		Alt:0,
	},
	&token.BorderDef {
		Father: chainhash.Hash{},
		Begin: chainhash.Hash{
		0xef, 0x47, 0x77, 0x39, 0xa7, 0x5b, 0x4b, 0xff, 
		0x95, 0x54, 0x80, 0x2d, 0xdf, 0x34, 0xbe, 0xd1, 
		0x2f, 0xe4, 0xfb, 0x18, 0xa6, 0x30, 0xa7, 0xca, 
		0x0c, 0x56, 0x84, 0xb7, 0x42, 0x4d, 0xa2, 0x3e, 
	},
		End: chainhash.Hash{
		0xd3, 0x2f, 0x8e, 0xae, 0x91, 0xa4, 0x15, 0x7d, 
		0x67, 0x3a, 0x3e, 0x6a, 0x22, 0x67, 0x1e, 0xa2, 
		0x79, 0x79, 0x9e, 0x2f, 0x02, 0x0a, 0x98, 0xc6, 
		0x9b, 0xa0, 0xfc, 0x16, 0x39, 0x9d, 0xc3, 0x70, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{},
		Begin: chainhash.Hash{
		0xd3, 0x2f, 0x8e, 0xae, 0x91, 0xa4, 0x15, 0x7d, 
		0x67, 0x3a, 0x3e, 0x6a, 0x22, 0x67, 0x1e, 0xa2, 
		0x79, 0x79, 0x9e, 0x2f, 0x02, 0x0a, 0x98, 0xc6, 
		0x9b, 0xa0, 0xfc, 0x16, 0x39, 0x9d, 0xc3, 0x70, 
	},
		End: chainhash.Hash{
		0x15, 0x4b, 0xee, 0x3e, 0xa2, 0x33, 0xfd, 0x38, 
		0x04, 0x3d, 0x07, 0xf8, 0x4b, 0x95, 0xb4, 0x7c, 
		0x04, 0xfe, 0xc5, 0x8e, 0xef, 0x25, 0x5f, 0x25, 
		0x10, 0x92, 0x51, 0x30, 0xb8, 0x5c, 0xab, 0x60, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{},
		Begin: chainhash.Hash{
		0x15, 0x4b, 0xee, 0x3e, 0xa2, 0x33, 0xfd, 0x38, 
		0x04, 0x3d, 0x07, 0xf8, 0x4b, 0x95, 0xb4, 0x7c, 
		0x04, 0xfe, 0xc5, 0x8e, 0xef, 0x25, 0x5f, 0x25, 
		0x10, 0x92, 0x51, 0x30, 0xb8, 0x5c, 0xab, 0x60, 
	},
		End: chainhash.Hash{
		0x60, 0x90, 0xbf, 0x11, 0xeb, 0x17, 0xf9, 0xad, 
		0x13, 0xfe, 0xb4, 0x3a, 0x16, 0x85, 0x40, 0xb5, 
		0x81, 0x1e, 0x32, 0x5b, 0x36, 0xc8, 0xfd, 0x3c, 
		0x7a, 0xf4, 0x40, 0xb3, 0x2c, 0x2c, 0x33, 0xb9, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{},
		Begin: chainhash.Hash{
		0x60, 0x90, 0xbf, 0x11, 0xeb, 0x17, 0xf9, 0xad, 
		0x13, 0xfe, 0xb4, 0x3a, 0x16, 0x85, 0x40, 0xb5, 
		0x81, 0x1e, 0x32, 0x5b, 0x36, 0xc8, 0xfd, 0x3c, 
		0x7a, 0xf4, 0x40, 0xb3, 0x2c, 0x2c, 0x33, 0xb9, 
	},
		End: chainhash.Hash{
		0xef, 0x47, 0x77, 0x39, 0xa7, 0x5b, 0x4b, 0xff, 
		0x95, 0x54, 0x80, 0x2d, 0xdf, 0x34, 0xbe, 0xd1, 
		0x2f, 0xe4, 0xfb, 0x18, 0xa6, 0x30, 0xa7, 0xca, 
		0x0c, 0x56, 0x84, 0xb7, 0x42, 0x4d, 0xa2, 0x3e, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0xef, 0x47, 0x77, 0x39, 0xa7, 0x5b, 0x4b, 0xff, 
		0x95, 0x54, 0x80, 0x2d, 0xdf, 0x34, 0xbe, 0xd1, 
		0x2f, 0xe4, 0xfb, 0x18, 0xa6, 0x30, 0xa7, 0xca, 
		0x0c, 0x56, 0x84, 0xb7, 0x42, 0x4d, 0xa2, 0x3e, 
	},
		End: chainhash.Hash{
		0x62, 0x68, 0x07, 0xdb, 0x98, 0x54, 0x54, 0x36, 
		0x42, 0xc7, 0xa8, 0x61, 0x29, 0x06, 0xfe, 0xad, 
		0x09, 0x99, 0xa3, 0x85, 0xfd, 0xe9, 0xa5, 0xb6, 
		0x26, 0x8d, 0xac, 0xf3, 0x7d, 0x15, 0x3d, 0x36, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x15, 0x4b, 0xee, 0x3e, 0xa2, 0x33, 0xfd, 0x38, 
		0x04, 0x3d, 0x07, 0xf8, 0x4b, 0x95, 0xb4, 0x7c, 
		0x04, 0xfe, 0xc5, 0x8e, 0xef, 0x25, 0x5f, 0x25, 
		0x10, 0x92, 0x51, 0x30, 0xb8, 0x5c, 0xab, 0x60, 
	},
		End: chainhash.Hash{
		0x59, 0xa4, 0xfe, 0xe2, 0x39, 0x77, 0x87, 0xfa, 
		0x2a, 0xdf, 0x88, 0x1b, 0x1c, 0xdb, 0x01, 0x33, 
		0x19, 0x75, 0xa1, 0x9d, 0xe8, 0x09, 0x80, 0x2d, 
		0x30, 0x6f, 0x37, 0x3b, 0x5b, 0x62, 0x94, 0x87, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x62, 0x68, 0x07, 0xdb, 0x98, 0x54, 0x54, 0x36, 
		0x42, 0xc7, 0xa8, 0x61, 0x29, 0x06, 0xfe, 0xad, 
		0x09, 0x99, 0xa3, 0x85, 0xfd, 0xe9, 0xa5, 0xb6, 
		0x26, 0x8d, 0xac, 0xf3, 0x7d, 0x15, 0x3d, 0x36, 
	},
		End: chainhash.Hash{
		0xf7, 0xe0, 0x64, 0x6a, 0xf8, 0x2b, 0x1c, 0x27, 
		0x5c, 0x60, 0x57, 0x31, 0x35, 0xb6, 0xc5, 0xc8, 
		0xa0, 0xd8, 0x33, 0x2f, 0x17, 0x7b, 0xbf, 0xfb, 
		0x3d, 0x14, 0xde, 0xfe, 0x22, 0x84, 0x2c, 0x48, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x59, 0xa4, 0xfe, 0xe2, 0x39, 0x77, 0x87, 0xfa, 
		0x2a, 0xdf, 0x88, 0x1b, 0x1c, 0xdb, 0x01, 0x33, 
		0x19, 0x75, 0xa1, 0x9d, 0xe8, 0x09, 0x80, 0x2d, 
		0x30, 0x6f, 0x37, 0x3b, 0x5b, 0x62, 0x94, 0x87, 
	},
		End: chainhash.Hash{
		0xf6, 0x26, 0xc1, 0xc6, 0xbc, 0x68, 0xe7, 0xbe, 
		0xe0, 0xaf, 0x1b, 0xc2, 0x35, 0xb9, 0x31, 0xe5, 
		0xfd, 0x1c, 0x45, 0x34, 0xc5, 0xb6, 0x28, 0xd0, 
		0xd7, 0x7b, 0x8b, 0xe7, 0xd5, 0x24, 0x48, 0x9f, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0xf7, 0xe0, 0x64, 0x6a, 0xf8, 0x2b, 0x1c, 0x27, 
		0x5c, 0x60, 0x57, 0x31, 0x35, 0xb6, 0xc5, 0xc8, 
		0xa0, 0xd8, 0x33, 0x2f, 0x17, 0x7b, 0xbf, 0xfb, 
		0x3d, 0x14, 0xde, 0xfe, 0x22, 0x84, 0x2c, 0x48, 
	},
		End: chainhash.Hash{
		0x48, 0x4f, 0x59, 0xa0, 0x6a, 0x21, 0x3c, 0x82, 
		0xa7, 0xa2, 0xd9, 0xc9, 0x84, 0x42, 0xc0, 0x50, 
		0x65, 0x68, 0xa9, 0x24, 0x76, 0x02, 0x28, 0x74, 
		0x6b, 0xa7, 0x11, 0x52, 0x57, 0x05, 0x3a, 0x1a, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0xf6, 0x26, 0xc1, 0xc6, 0xbc, 0x68, 0xe7, 0xbe, 
		0xe0, 0xaf, 0x1b, 0xc2, 0x35, 0xb9, 0x31, 0xe5, 
		0xfd, 0x1c, 0x45, 0x34, 0xc5, 0xb6, 0x28, 0xd0, 
		0xd7, 0x7b, 0x8b, 0xe7, 0xd5, 0x24, 0x48, 0x9f, 
	},
		End: chainhash.Hash{
		0xa0, 0x3b, 0xb5, 0x88, 0xf5, 0x2b, 0x1f, 0x84, 
		0x69, 0x90, 0x66, 0x43, 0x3a, 0x9e, 0x68, 0xb6, 
		0xfe, 0xfa, 0x01, 0x82, 0x5c, 0xb5, 0xd4, 0xc5, 
		0xf1, 0x02, 0xf9, 0x08, 0xf3, 0xe4, 0x55, 0xb7, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x48, 0x4f, 0x59, 0xa0, 0x6a, 0x21, 0x3c, 0x82, 
		0xa7, 0xa2, 0xd9, 0xc9, 0x84, 0x42, 0xc0, 0x50, 
		0x65, 0x68, 0xa9, 0x24, 0x76, 0x02, 0x28, 0x74, 
		0x6b, 0xa7, 0x11, 0x52, 0x57, 0x05, 0x3a, 0x1a, 
	},
		End: chainhash.Hash{
		0x7a, 0x3f, 0xba, 0x11, 0x1c, 0xf0, 0xa5, 0x5b, 
		0xb8, 0x3d, 0x54, 0xc1, 0xc4, 0x8b, 0xe4, 0xfe, 
		0xb3, 0xf9, 0x95, 0x11, 0xbf, 0x29, 0x13, 0xfa, 
		0x88, 0x12, 0xee, 0xab, 0x87, 0x39, 0x84, 0x90, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0xa0, 0x3b, 0xb5, 0x88, 0xf5, 0x2b, 0x1f, 0x84, 
		0x69, 0x90, 0x66, 0x43, 0x3a, 0x9e, 0x68, 0xb6, 
		0xfe, 0xfa, 0x01, 0x82, 0x5c, 0xb5, 0xd4, 0xc5, 
		0xf1, 0x02, 0xf9, 0x08, 0xf3, 0xe4, 0x55, 0xb7, 
	},
		End: chainhash.Hash{
		0xc4, 0x55, 0x0c, 0x51, 0x40, 0x3c, 0x10, 0x30, 
		0x31, 0x75, 0x3b, 0xf5, 0x5d, 0xba, 0x38, 0x13, 
		0x44, 0xb2, 0x16, 0x35, 0x89, 0x4e, 0xde, 0x34, 
		0xbf, 0x8a, 0xec, 0x12, 0x91, 0x2b, 0x52, 0xed, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x7a, 0x3f, 0xba, 0x11, 0x1c, 0xf0, 0xa5, 0x5b, 
		0xb8, 0x3d, 0x54, 0xc1, 0xc4, 0x8b, 0xe4, 0xfe, 
		0xb3, 0xf9, 0x95, 0x11, 0xbf, 0x29, 0x13, 0xfa, 
		0x88, 0x12, 0xee, 0xab, 0x87, 0x39, 0x84, 0x90, 
	},
		End: chainhash.Hash{
		0x05, 0xbd, 0x78, 0x9c, 0x1a, 0xd2, 0x00, 0x37, 
		0x91, 0x72, 0x9f, 0x3b, 0x44, 0x78, 0xf8, 0x27, 
		0x91, 0xbf, 0x3f, 0x74, 0xf4, 0xaf, 0x3a, 0x67, 
		0x18, 0x44, 0xc1, 0x6a, 0x89, 0xb9, 0xfd, 0xcb, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0xc4, 0x55, 0x0c, 0x51, 0x40, 0x3c, 0x10, 0x30, 
		0x31, 0x75, 0x3b, 0xf5, 0x5d, 0xba, 0x38, 0x13, 
		0x44, 0xb2, 0x16, 0x35, 0x89, 0x4e, 0xde, 0x34, 
		0xbf, 0x8a, 0xec, 0x12, 0x91, 0x2b, 0x52, 0xed, 
	},
		End: chainhash.Hash{
		0x61, 0xa2, 0x3a, 0x89, 0xf9, 0xab, 0xb4, 0x12, 
		0x51, 0x44, 0x3d, 0xde, 0x98, 0x3a, 0xfc, 0xc0, 
		0x21, 0x85, 0x9f, 0xd4, 0x4b, 0x17, 0x95, 0x7e, 
		0xad, 0x8e, 0x2c, 0x9d, 0xbc, 0xc3, 0xb6, 0x0f, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x05, 0xbd, 0x78, 0x9c, 0x1a, 0xd2, 0x00, 0x37, 
		0x91, 0x72, 0x9f, 0x3b, 0x44, 0x78, 0xf8, 0x27, 
		0x91, 0xbf, 0x3f, 0x74, 0xf4, 0xaf, 0x3a, 0x67, 
		0x18, 0x44, 0xc1, 0x6a, 0x89, 0xb9, 0xfd, 0xcb, 
	},
		End: chainhash.Hash{
		0x89, 0x96, 0xf1, 0xab, 0x38, 0xfe, 0xfa, 0x00, 
		0xe5, 0x7b, 0x6f, 0x56, 0x3b, 0x71, 0xc7, 0xfe, 
		0xa7, 0xf3, 0x16, 0xb8, 0xa8, 0x6e, 0xf5, 0x33, 
		0x2c, 0x5c, 0xc0, 0x1f, 0xdb, 0x53, 0x99, 0xe6, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x61, 0xa2, 0x3a, 0x89, 0xf9, 0xab, 0xb4, 0x12, 
		0x51, 0x44, 0x3d, 0xde, 0x98, 0x3a, 0xfc, 0xc0, 
		0x21, 0x85, 0x9f, 0xd4, 0x4b, 0x17, 0x95, 0x7e, 
		0xad, 0x8e, 0x2c, 0x9d, 0xbc, 0xc3, 0xb6, 0x0f, 
	},
		End: chainhash.Hash{
		0x4e, 0x9e, 0x04, 0x6f, 0x63, 0x4a, 0x7e, 0xe1, 
		0x51, 0x77, 0x9b, 0xd3, 0x32, 0x20, 0xbc, 0x66, 
		0xf2, 0x4b, 0xd8, 0x63, 0x40, 0xa6, 0x5c, 0xd5, 
		0x62, 0x02, 0x8d, 0x13, 0x4e, 0xcd, 0x0f, 0x67, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x89, 0x96, 0xf1, 0xab, 0x38, 0xfe, 0xfa, 0x00, 
		0xe5, 0x7b, 0x6f, 0x56, 0x3b, 0x71, 0xc7, 0xfe, 
		0xa7, 0xf3, 0x16, 0xb8, 0xa8, 0x6e, 0xf5, 0x33, 
		0x2c, 0x5c, 0xc0, 0x1f, 0xdb, 0x53, 0x99, 0xe6, 
	},
		End: chainhash.Hash{
		0xf1, 0x5d, 0x34, 0xb5, 0xd7, 0x14, 0x76, 0xb1, 
		0xef, 0xf7, 0x3f, 0x8a, 0x49, 0x77, 0xc5, 0x4a, 
		0x0a, 0x05, 0x80, 0xb3, 0x8d, 0x44, 0x83, 0x08, 
		0xd0, 0x64, 0x83, 0xfc, 0xb1, 0xe1, 0x2b, 0xde, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x4e, 0x9e, 0x04, 0x6f, 0x63, 0x4a, 0x7e, 0xe1, 
		0x51, 0x77, 0x9b, 0xd3, 0x32, 0x20, 0xbc, 0x66, 
		0xf2, 0x4b, 0xd8, 0x63, 0x40, 0xa6, 0x5c, 0xd5, 
		0x62, 0x02, 0x8d, 0x13, 0x4e, 0xcd, 0x0f, 0x67, 
	},
		End: chainhash.Hash{
		0x60, 0x2f, 0xe8, 0xd8, 0xe7, 0x57, 0x9d, 0xeb, 
		0x12, 0x0f, 0x2d, 0x8c, 0x70, 0x73, 0x31, 0xd4, 
		0xa3, 0x3d, 0xe2, 0x03, 0xa1, 0x24, 0x99, 0xa6, 
		0x4f, 0x8a, 0x9d, 0xf8, 0xf7, 0xa3, 0x35, 0x83, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0xf1, 0x5d, 0x34, 0xb5, 0xd7, 0x14, 0x76, 0xb1, 
		0xef, 0xf7, 0x3f, 0x8a, 0x49, 0x77, 0xc5, 0x4a, 
		0x0a, 0x05, 0x80, 0xb3, 0x8d, 0x44, 0x83, 0x08, 
		0xd0, 0x64, 0x83, 0xfc, 0xb1, 0xe1, 0x2b, 0xde, 
	},
		End: chainhash.Hash{
		0xfc, 0xc2, 0x04, 0x6b, 0x04, 0x27, 0x09, 0xf1, 
		0xa7, 0x0b, 0xb9, 0x0a, 0xd7, 0x62, 0x27, 0x98, 
		0x1c, 0xfd, 0xb5, 0x1c, 0x16, 0x7e, 0xa2, 0x5b, 
		0x5c, 0xfe, 0xa5, 0x27, 0xc4, 0xcf, 0x56, 0x2c, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x60, 0x2f, 0xe8, 0xd8, 0xe7, 0x57, 0x9d, 0xeb, 
		0x12, 0x0f, 0x2d, 0x8c, 0x70, 0x73, 0x31, 0xd4, 
		0xa3, 0x3d, 0xe2, 0x03, 0xa1, 0x24, 0x99, 0xa6, 
		0x4f, 0x8a, 0x9d, 0xf8, 0xf7, 0xa3, 0x35, 0x83, 
	},
		End: chainhash.Hash{
		0xf9, 0x7a, 0xa5, 0x10, 0x48, 0xa0, 0x04, 0xc8, 
		0x32, 0x0b, 0x01, 0x31, 0x65, 0x12, 0x42, 0x3a, 
		0x83, 0x3e, 0x67, 0xa1, 0xd7, 0x49, 0x16, 0x76, 
		0x27, 0x62, 0xbd, 0x58, 0x6d, 0x30, 0x42, 0x1c, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0xfc, 0xc2, 0x04, 0x6b, 0x04, 0x27, 0x09, 0xf1, 
		0xa7, 0x0b, 0xb9, 0x0a, 0xd7, 0x62, 0x27, 0x98, 
		0x1c, 0xfd, 0xb5, 0x1c, 0x16, 0x7e, 0xa2, 0x5b, 
		0x5c, 0xfe, 0xa5, 0x27, 0xc4, 0xcf, 0x56, 0x2c, 
	},
		End: chainhash.Hash{
		0xc1, 0x69, 0x13, 0x3a, 0x66, 0x4e, 0x49, 0x12, 
		0xe8, 0x2a, 0xff, 0x97, 0xf6, 0xe1, 0x53, 0x50, 
		0x7c, 0xf0, 0x75, 0x2d, 0x3e, 0xa7, 0xef, 0x95, 
		0xc8, 0xba, 0xb9, 0x81, 0x3e, 0x0f, 0x5f, 0x92, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0xf9, 0x7a, 0xa5, 0x10, 0x48, 0xa0, 0x04, 0xc8, 
		0x32, 0x0b, 0x01, 0x31, 0x65, 0x12, 0x42, 0x3a, 
		0x83, 0x3e, 0x67, 0xa1, 0xd7, 0x49, 0x16, 0x76, 
		0x27, 0x62, 0xbd, 0x58, 0x6d, 0x30, 0x42, 0x1c, 
	},
		End: chainhash.Hash{
		0x73, 0x2d, 0x8a, 0x99, 0x4a, 0x2b, 0x84, 0x25, 
		0x04, 0xec, 0x2c, 0x15, 0x74, 0x2b, 0xca, 0x82, 
		0x37, 0xe4, 0xa8, 0x0d, 0x94, 0x47, 0x15, 0x0c, 
		0x7f, 0x53, 0x13, 0xe8, 0x16, 0xf8, 0x40, 0xe8, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0xc1, 0x69, 0x13, 0x3a, 0x66, 0x4e, 0x49, 0x12, 
		0xe8, 0x2a, 0xff, 0x97, 0xf6, 0xe1, 0x53, 0x50, 
		0x7c, 0xf0, 0x75, 0x2d, 0x3e, 0xa7, 0xef, 0x95, 
		0xc8, 0xba, 0xb9, 0x81, 0x3e, 0x0f, 0x5f, 0x92, 
	},
		End: chainhash.Hash{
		0xfe, 0x42, 0x9a, 0x6e, 0x69, 0x73, 0x7f, 0x0c, 
		0xe2, 0xad, 0x5b, 0xbd, 0x6b, 0x32, 0xcb, 0xac, 
		0xd7, 0xaf, 0xb7, 0xe7, 0x65, 0x9e, 0x51, 0x01, 
		0xab, 0x36, 0x94, 0x36, 0x3a, 0x22, 0xce, 0x30, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x73, 0x2d, 0x8a, 0x99, 0x4a, 0x2b, 0x84, 0x25, 
		0x04, 0xec, 0x2c, 0x15, 0x74, 0x2b, 0xca, 0x82, 
		0x37, 0xe4, 0xa8, 0x0d, 0x94, 0x47, 0x15, 0x0c, 
		0x7f, 0x53, 0x13, 0xe8, 0x16, 0xf8, 0x40, 0xe8, 
	},
		End: chainhash.Hash{
		0xbd, 0x29, 0x70, 0x64, 0xca, 0xb0, 0x08, 0x50, 
		0x5b, 0x38, 0x23, 0x28, 0x10, 0xd7, 0x7a, 0xbb, 
		0xa3, 0xe0, 0x83, 0x4d, 0x64, 0xc4, 0x8e, 0xec, 
		0xda, 0xcf, 0xde, 0x76, 0x5d, 0xbf, 0xe7, 0x14, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0xfe, 0x42, 0x9a, 0x6e, 0x69, 0x73, 0x7f, 0x0c, 
		0xe2, 0xad, 0x5b, 0xbd, 0x6b, 0x32, 0xcb, 0xac, 
		0xd7, 0xaf, 0xb7, 0xe7, 0x65, 0x9e, 0x51, 0x01, 
		0xab, 0x36, 0x94, 0x36, 0x3a, 0x22, 0xce, 0x30, 
	},
		End: chainhash.Hash{
		0x8f, 0xa2, 0xf8, 0x16, 0x99, 0x9c, 0xca, 0xab, 
		0x8a, 0xdf, 0x1c, 0x3d, 0x1e, 0x24, 0x9d, 0x14, 
		0xe5, 0xd4, 0x4d, 0x3e, 0x5a, 0x29, 0x57, 0xb5, 
		0xe8, 0x0f, 0x24, 0x72, 0x80, 0x7e, 0x6a, 0xcd, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0xbd, 0x29, 0x70, 0x64, 0xca, 0xb0, 0x08, 0x50, 
		0x5b, 0x38, 0x23, 0x28, 0x10, 0xd7, 0x7a, 0xbb, 
		0xa3, 0xe0, 0x83, 0x4d, 0x64, 0xc4, 0x8e, 0xec, 
		0xda, 0xcf, 0xde, 0x76, 0x5d, 0xbf, 0xe7, 0x14, 
	},
		End: chainhash.Hash{
		0x41, 0x43, 0x78, 0x5c, 0x16, 0x63, 0x26, 0xf3, 
		0x1b, 0x32, 0x8d, 0xb2, 0x90, 0x4f, 0xe7, 0x17, 
		0x9c, 0xa1, 0x07, 0x1f, 0x5f, 0x54, 0xea, 0xb7, 
		0xcd, 0xc2, 0xa0, 0x83, 0x4f, 0xcd, 0xe3, 0xac, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x8f, 0xa2, 0xf8, 0x16, 0x99, 0x9c, 0xca, 0xab, 
		0x8a, 0xdf, 0x1c, 0x3d, 0x1e, 0x24, 0x9d, 0x14, 
		0xe5, 0xd4, 0x4d, 0x3e, 0x5a, 0x29, 0x57, 0xb5, 
		0xe8, 0x0f, 0x24, 0x72, 0x80, 0x7e, 0x6a, 0xcd, 
	},
		End: chainhash.Hash{
		0x22, 0x12, 0x5c, 0x8b, 0xf5, 0x8f, 0x90, 0x33, 
		0x19, 0xd9, 0x5e, 0x5c, 0xf7, 0x1f, 0x28, 0xc2, 
		0xdf, 0x55, 0x9b, 0x79, 0x86, 0x71, 0x9f, 0xc5, 
		0xc2, 0x48, 0x62, 0x80, 0x6c, 0xe6, 0x26, 0x6d, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x41, 0x43, 0x78, 0x5c, 0x16, 0x63, 0x26, 0xf3, 
		0x1b, 0x32, 0x8d, 0xb2, 0x90, 0x4f, 0xe7, 0x17, 
		0x9c, 0xa1, 0x07, 0x1f, 0x5f, 0x54, 0xea, 0xb7, 
		0xcd, 0xc2, 0xa0, 0x83, 0x4f, 0xcd, 0xe3, 0xac, 
	},
		End: chainhash.Hash{
		0x37, 0xd9, 0x59, 0xdb, 0x1e, 0xf8, 0x5d, 0xac, 
		0x15, 0xbc, 0x8e, 0x0f, 0xc7, 0x23, 0x45, 0xff, 
		0xcc, 0x2a, 0xdf, 0x48, 0xe4, 0xee, 0x3e, 0x76, 
		0x9c, 0x65, 0x1a, 0x4a, 0x71, 0x98, 0xb8, 0xca, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x22, 0x12, 0x5c, 0x8b, 0xf5, 0x8f, 0x90, 0x33, 
		0x19, 0xd9, 0x5e, 0x5c, 0xf7, 0x1f, 0x28, 0xc2, 
		0xdf, 0x55, 0x9b, 0x79, 0x86, 0x71, 0x9f, 0xc5, 
		0xc2, 0x48, 0x62, 0x80, 0x6c, 0xe6, 0x26, 0x6d, 
	},
		End: chainhash.Hash{
		0x6d, 0x09, 0x85, 0x81, 0x6b, 0x63, 0xca, 0x48, 
		0x42, 0x69, 0x2a, 0x2c, 0x92, 0xf2, 0xe4, 0x33, 
		0x59, 0x3d, 0xea, 0x57, 0x4a, 0xbf, 0x06, 0x35, 
		0xb7, 0x59, 0x4e, 0x21, 0x30, 0x50, 0xc6, 0xfb, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x37, 0xd9, 0x59, 0xdb, 0x1e, 0xf8, 0x5d, 0xac, 
		0x15, 0xbc, 0x8e, 0x0f, 0xc7, 0x23, 0x45, 0xff, 
		0xcc, 0x2a, 0xdf, 0x48, 0xe4, 0xee, 0x3e, 0x76, 
		0x9c, 0x65, 0x1a, 0x4a, 0x71, 0x98, 0xb8, 0xca, 
	},
		End: chainhash.Hash{
		0xdf, 0x40, 0x6b, 0x1f, 0x50, 0x11, 0x36, 0xf5, 
		0xb2, 0x63, 0xf3, 0xad, 0xaa, 0xcf, 0xfb, 0x63, 
		0x29, 0xea, 0xbd, 0xd0, 0x1e, 0x9f, 0x2a, 0x91, 
		0x77, 0x2a, 0x75, 0xe3, 0xe1, 0x36, 0x56, 0x9f, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x6d, 0x09, 0x85, 0x81, 0x6b, 0x63, 0xca, 0x48, 
		0x42, 0x69, 0x2a, 0x2c, 0x92, 0xf2, 0xe4, 0x33, 
		0x59, 0x3d, 0xea, 0x57, 0x4a, 0xbf, 0x06, 0x35, 
		0xb7, 0x59, 0x4e, 0x21, 0x30, 0x50, 0xc6, 0xfb, 
	},
		End: chainhash.Hash{
		0xfd, 0x21, 0x54, 0x8b, 0xcd, 0xb6, 0x13, 0xea, 
		0xca, 0x30, 0x0d, 0x12, 0xef, 0xc0, 0x75, 0x91, 
		0xe8, 0xbd, 0x96, 0x60, 0x21, 0xb8, 0xb3, 0x42, 
		0xfd, 0x6b, 0xa1, 0x00, 0xf7, 0x35, 0x08, 0xc4, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0xdf, 0x40, 0x6b, 0x1f, 0x50, 0x11, 0x36, 0xf5, 
		0xb2, 0x63, 0xf3, 0xad, 0xaa, 0xcf, 0xfb, 0x63, 
		0x29, 0xea, 0xbd, 0xd0, 0x1e, 0x9f, 0x2a, 0x91, 
		0x77, 0x2a, 0x75, 0xe3, 0xe1, 0x36, 0x56, 0x9f, 
	},
		End: chainhash.Hash{
		0x0d, 0xc6, 0x50, 0x86, 0xf7, 0xfa, 0x7f, 0xe1, 
		0xf5, 0x66, 0xf4, 0xb7, 0xae, 0x68, 0x68, 0x7b, 
		0x4c, 0x1e, 0xf0, 0x95, 0x81, 0x86, 0x42, 0x13, 
		0x4a, 0xee, 0x50, 0x5e, 0xd5, 0xbb, 0x57, 0x29, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0xfd, 0x21, 0x54, 0x8b, 0xcd, 0xb6, 0x13, 0xea, 
		0xca, 0x30, 0x0d, 0x12, 0xef, 0xc0, 0x75, 0x91, 
		0xe8, 0xbd, 0x96, 0x60, 0x21, 0xb8, 0xb3, 0x42, 
		0xfd, 0x6b, 0xa1, 0x00, 0xf7, 0x35, 0x08, 0xc4, 
	},
		End: chainhash.Hash{
		0x63, 0xc9, 0xf6, 0xc8, 0x4d, 0x45, 0x05, 0x7e, 
		0x64, 0xfb, 0xdd, 0x50, 0x98, 0x46, 0x25, 0x16, 
		0x89, 0x77, 0x56, 0xac, 0xd6, 0x68, 0x05, 0x18, 
		0x2a, 0x74, 0x3d, 0x10, 0xca, 0xb6, 0x66, 0x4b, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x0d, 0xc6, 0x50, 0x86, 0xf7, 0xfa, 0x7f, 0xe1, 
		0xf5, 0x66, 0xf4, 0xb7, 0xae, 0x68, 0x68, 0x7b, 
		0x4c, 0x1e, 0xf0, 0x95, 0x81, 0x86, 0x42, 0x13, 
		0x4a, 0xee, 0x50, 0x5e, 0xd5, 0xbb, 0x57, 0x29, 
	},
		End: chainhash.Hash{
		0xfb, 0xf0, 0xf6, 0xfe, 0xb5, 0x53, 0x44, 0xd8, 
		0x33, 0xe5, 0x97, 0xf7, 0x53, 0xc6, 0xdf, 0x41, 
		0x2e, 0x9d, 0xbf, 0x33, 0xa4, 0x62, 0x1e, 0x0d, 
		0x5a, 0x52, 0x2e, 0xde, 0xa4, 0x58, 0x88, 0x09, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x63, 0xc9, 0xf6, 0xc8, 0x4d, 0x45, 0x05, 0x7e, 
		0x64, 0xfb, 0xdd, 0x50, 0x98, 0x46, 0x25, 0x16, 
		0x89, 0x77, 0x56, 0xac, 0xd6, 0x68, 0x05, 0x18, 
		0x2a, 0x74, 0x3d, 0x10, 0xca, 0xb6, 0x66, 0x4b, 
	},
		End: chainhash.Hash{
		0xf3, 0x48, 0xc3, 0xa6, 0xf7, 0x5f, 0xc8, 0x20, 
		0x18, 0x0b, 0xd0, 0xb8, 0x10, 0x19, 0xfe, 0xb3, 
		0x5b, 0x36, 0x38, 0x08, 0x4b, 0x68, 0x53, 0x48, 
		0x98, 0x19, 0xf8, 0x36, 0x73, 0x1d, 0xef, 0x51, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0xfb, 0xf0, 0xf6, 0xfe, 0xb5, 0x53, 0x44, 0xd8, 
		0x33, 0xe5, 0x97, 0xf7, 0x53, 0xc6, 0xdf, 0x41, 
		0x2e, 0x9d, 0xbf, 0x33, 0xa4, 0x62, 0x1e, 0x0d, 
		0x5a, 0x52, 0x2e, 0xde, 0xa4, 0x58, 0x88, 0x09, 
	},
		End: chainhash.Hash{
		0x39, 0x62, 0x10, 0xdd, 0x8e, 0x8d, 0x2f, 0x98, 
		0x2f, 0x7b, 0x76, 0x94, 0xfc, 0x70, 0xd7, 0x52, 
		0x4c, 0xd9, 0xb1, 0x92, 0x5d, 0x73, 0x2c, 0x04, 
		0xcb, 0xef, 0x14, 0xfe, 0x85, 0x03, 0x6c, 0xaf, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0xf3, 0x48, 0xc3, 0xa6, 0xf7, 0x5f, 0xc8, 0x20, 
		0x18, 0x0b, 0xd0, 0xb8, 0x10, 0x19, 0xfe, 0xb3, 
		0x5b, 0x36, 0x38, 0x08, 0x4b, 0x68, 0x53, 0x48, 
		0x98, 0x19, 0xf8, 0x36, 0x73, 0x1d, 0xef, 0x51, 
	},
		End: chainhash.Hash{
		0x9d, 0x58, 0x4d, 0x44, 0x41, 0xba, 0xd3, 0x24, 
		0x0c, 0xab, 0x75, 0x1b, 0xd4, 0xd0, 0x64, 0x21, 
		0xed, 0x74, 0xfa, 0x0c, 0x0f, 0xc3, 0x59, 0x2a, 
		0xd7, 0x28, 0x37, 0x2c, 0x31, 0x03, 0x59, 0x6d, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x39, 0x62, 0x10, 0xdd, 0x8e, 0x8d, 0x2f, 0x98, 
		0x2f, 0x7b, 0x76, 0x94, 0xfc, 0x70, 0xd7, 0x52, 
		0x4c, 0xd9, 0xb1, 0x92, 0x5d, 0x73, 0x2c, 0x04, 
		0xcb, 0xef, 0x14, 0xfe, 0x85, 0x03, 0x6c, 0xaf, 
	},
		End: chainhash.Hash{
		0x23, 0x23, 0x53, 0x75, 0x56, 0x91, 0xa5, 0x5f, 
		0xfe, 0x92, 0x49, 0x66, 0x23, 0xf9, 0x7e, 0xbf, 
		0x09, 0x22, 0xf4, 0xec, 0xef, 0x46, 0x78, 0x24, 
		0x4a, 0x5e, 0xa6, 0x06, 0x7c, 0x0b, 0x17, 0x57, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x9d, 0x58, 0x4d, 0x44, 0x41, 0xba, 0xd3, 0x24, 
		0x0c, 0xab, 0x75, 0x1b, 0xd4, 0xd0, 0x64, 0x21, 
		0xed, 0x74, 0xfa, 0x0c, 0x0f, 0xc3, 0x59, 0x2a, 
		0xd7, 0x28, 0x37, 0x2c, 0x31, 0x03, 0x59, 0x6d, 
	},
		End: chainhash.Hash{
		0x90, 0x2f, 0xaf, 0xa4, 0x66, 0xec, 0x19, 0xf5, 
		0x28, 0xd4, 0x5a, 0x29, 0x13, 0xba, 0x2d, 0x05, 
		0x9a, 0x58, 0xf2, 0x71, 0x56, 0xbc, 0x9c, 0x83, 
		0xf4, 0x6d, 0x7c, 0x6f, 0xd7, 0xf6, 0x16, 0x0c, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0x23, 0x23, 0x53, 0x75, 0x56, 0x91, 0xa5, 0x5f, 
		0xfe, 0x92, 0x49, 0x66, 0x23, 0xf9, 0x7e, 0xbf, 
		0x09, 0x22, 0xf4, 0xec, 0xef, 0x46, 0x78, 0x24, 
		0x4a, 0x5e, 0xa6, 0x06, 0x7c, 0x0b, 0x17, 0x57, 
	},
		End: chainhash.Hash{
		0xc7, 0x16, 0x33, 0xfb, 0xca, 0xeb, 0x93, 0x4d, 
		0x89, 0x6b, 0x0e, 0x62, 0xd3, 0xbb, 0x1d, 0x9f, 
		0xea, 0x33, 0xb4, 0xfd, 0x0e, 0x56, 0x95, 0xbc, 
		0x07, 0x1e, 0x68, 0xed, 0xf4, 0xf1, 0x12, 0x18, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x90, 0x2f, 0xaf, 0xa4, 0x66, 0xec, 0x19, 0xf5, 
		0x28, 0xd4, 0x5a, 0x29, 0x13, 0xba, 0x2d, 0x05, 
		0x9a, 0x58, 0xf2, 0x71, 0x56, 0xbc, 0x9c, 0x83, 
		0xf4, 0x6d, 0x7c, 0x6f, 0xd7, 0xf6, 0x16, 0x0c, 
	},
		End: chainhash.Hash{
		0x8b, 0x09, 0x1f, 0x7c, 0x93, 0xca, 0xb2, 0x26, 
		0x28, 0x40, 0xa1, 0x41, 0xeb, 0x32, 0x24, 0xbc, 
		0x19, 0xb6, 0xae, 0x1b, 0x56, 0x8e, 0x6d, 0x76, 
		0x1c, 0x7e, 0x64, 0xab, 0xc1, 0x08, 0x96, 0xad, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0xc7, 0x16, 0x33, 0xfb, 0xca, 0xeb, 0x93, 0x4d, 
		0x89, 0x6b, 0x0e, 0x62, 0xd3, 0xbb, 0x1d, 0x9f, 
		0xea, 0x33, 0xb4, 0xfd, 0x0e, 0x56, 0x95, 0xbc, 
		0x07, 0x1e, 0x68, 0xed, 0xf4, 0xf1, 0x12, 0x18, 
	},
		End: chainhash.Hash{
		0xb6, 0x75, 0xe7, 0x67, 0x01, 0x06, 0x22, 0x90, 
		0x94, 0xba, 0x0e, 0xf1, 0x57, 0xdc, 0x2d, 0x87, 
		0xdd, 0x31, 0xdc, 0x05, 0x2a, 0xec, 0x89, 0x27, 
		0xdd, 0x03, 0x67, 0x19, 0xe4, 0xca, 0x9b, 0x51, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		Begin: chainhash.Hash{
		0x8b, 0x09, 0x1f, 0x7c, 0x93, 0xca, 0xb2, 0x26, 
		0x28, 0x40, 0xa1, 0x41, 0xeb, 0x32, 0x24, 0xbc, 
		0x19, 0xb6, 0xae, 0x1b, 0x56, 0x8e, 0x6d, 0x76, 
		0x1c, 0x7e, 0x64, 0xab, 0xc1, 0x08, 0x96, 0xad, 
	},
		End: chainhash.Hash{
		0xd3, 0x2f, 0x8e, 0xae, 0x91, 0xa4, 0x15, 0x7d, 
		0x67, 0x3a, 0x3e, 0x6a, 0x22, 0x67, 0x1e, 0xa2, 
		0x79, 0x79, 0x9e, 0x2f, 0x02, 0x0a, 0x98, 0xc6, 
		0x9b, 0xa0, 0xfc, 0x16, 0x39, 0x9d, 0xc3, 0x70, 
	},
	},
	&token.BorderDef {
		Father: chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		Begin: chainhash.Hash{
		0xb6, 0x75, 0xe7, 0x67, 0x01, 0x06, 0x22, 0x90, 
		0x94, 0xba, 0x0e, 0xf1, 0x57, 0xdc, 0x2d, 0x87, 
		0xdd, 0x31, 0xdc, 0x05, 0x2a, 0xec, 0x89, 0x27, 
		0xdd, 0x03, 0x67, 0x19, 0xe4, 0xca, 0x9b, 0x51, 
	},
		End: chainhash.Hash{
		0x60, 0x90, 0xbf, 0x11, 0xeb, 0x17, 0xf9, 0xad, 
		0x13, 0xfe, 0xb4, 0x3a, 0x16, 0x85, 0x40, 0xb5, 
		0x81, 0x1e, 0x32, 0x5b, 0x36, 0xc8, 0xfd, 0x3c, 
		0x7a, 0xf4, 0x40, 0xb3, 0x2c, 0x2c, 0x33, 0xb9, 
	},
	},
	&token.PolygonDef {	Loops: []token.LoopDef{{	// Loop 0:
		chainhash.Hash{
		0x10, 0x33, 0xc6, 0x9f, 0xfd, 0x4d, 0x33, 0x2a, 
		0x7c, 0x85, 0xb8, 0x5a, 0x26, 0xfd, 0x90, 0xa9, 
		0xd1, 0x5c, 0xf0, 0x6c, 0x11, 0x69, 0x42, 0xb3, 
		0xe4, 0xf2, 0xbc, 0xa5, 0x0e, 0x26, 0x1f, 0xb2, 
	},
		chainhash.Hash{
		0xc0, 0x19, 0xbe, 0xbe, 0xfe, 0x60, 0x80, 0xa6, 
		0xb5, 0x91, 0x5f, 0x6c, 0x8b, 0xb8, 0xb1, 0xcf, 
		0x15, 0x1a, 0x38, 0xe0, 0xcb, 0x85, 0x98, 0xda, 
		0xcc, 0xfc, 0x91, 0xf3, 0x0a, 0xba, 0x20, 0x5a, 
	},
		chainhash.Hash{
		0x1a, 0x1e, 0x2d, 0x57, 0x80, 0xdd, 0x0c, 0xdd, 
		0x36, 0x4e, 0x88, 0xa0, 0x4e, 0x75, 0x35, 0x3c, 
		0x59, 0x3c, 0xd0, 0x17, 0x3f, 0x00, 0xa2, 0x36, 
		0xd0, 0x33, 0x5a, 0x04, 0x1e, 0x5e, 0x41, 0x7a, 
	},
		chainhash.Hash{
		0x90, 0x2c, 0xc0, 0x72, 0xe4, 0x2f, 0x8a, 0x53, 
		0xd4, 0x09, 0x32, 0xbc, 0x90, 0x9c, 0x0f, 0xda, 
		0x4e, 0x55, 0xd2, 0x58, 0x88, 0x72, 0xf8, 0xac, 
		0xf3, 0xd0, 0x62, 0x3c, 0x12, 0xbf, 0x90, 0xcd, 
	},
			},
		},
	},
	&token.RightDef {Father: chainhash.Hash{},
		Desc: []byte("All Rights"),
		Attrib: 3,
	},
}

var coinToken = token.Token{
	TokenType: 0,
	Value: &token.NumToken{Val: 5000000000},
	Rights: &chainhash.Hash{},
}

var genesisCoinbaseTx = wire.MsgTx{
	Version: 1,
	TxDef: []token.Definition{},
	TxIn: []*wire.TxIn{
		{
			PreviousOutPoint: wire.OutPoint{
			Hash:  chainhash.Hash{},
			Index: 0,
		},
		SignatureIndex: 0xffffffff,
		Sequence: 0xffffffff,
	},
	},
	TxOut: []*wire.TxOut{
		{
			Token:coinToken,
			PkScript: []byte{
				0x6f, 0x2f, 0xe0, 0xef, 0x92, 0x85, 0xa1, 0x0e, 0x86, 0x0c, 0x25, 0xe0,
				0x3c, 0x3f, 0xf8, 0x59, 0x93, 0xd3, 0xff, 0xc3, 0x5e, 0x41, 0x00, 0x00, 0x00,
			},
		},
	},
	SignatureScripts: [][]byte { []byte{
		0, 0, 0, 0, 0, 0, 0, 0, 
		0, 0, 0, 0, 0, 0, 0, 0, 
		0, 0, 0, 0, 0, 0, 0, 0, 
		0, 0, 0, 0, 0, 0, 0, 0, 
	} },
	LockTime: 0,
}

var polygonToken = token.Token{
	TokenType: 3,
	Value: &token.HashToken{Hash: chainhash.Hash{
		0xcb, 0x27, 0x8f, 0x30, 0x73, 0xa3, 0xc4, 0xee, 
		0x22, 0x9f, 0x14, 0x4d, 0x93, 0xef, 0x76, 0x4d, 
		0xdf, 0xa1, 0xee, 0xa3, 0x7c, 0xd9, 0xbf, 0xf9, 
		0x8e, 0xc4, 0x31, 0x6a, 0x67, 0x84, 0xe9, 0xa9, 
	}},
	Rights: &chainhash.Hash{
		0x26, 0x76, 0x88, 0xb6, 0x9c, 0x2b, 0xba, 0xa2, 
		0x8c, 0x3c, 0x32, 0x16, 0x3a, 0x92, 0x41, 0x50, 
		0x1a, 0xbd, 0x95, 0x8a, 0xe3, 0xca, 0x2b, 0x60, 
		0xee, 0x9a, 0x8f, 0xd0, 0xc2, 0xec, 0xe6, 0x59, 
	},
}

var genesisInitPolygonTx = wire.MsgTx{
	Version: 1,
	TxDef: InitDefs,
	TxIn: []*wire.TxIn{},
	TxOut: []*wire.TxOut{
		{
			Token: polygonToken,
			PkScript: []byte{
				0x6f, 0x2f, 0xe0, 0xef, 0x92, 0x85, 0xa1, 0x0e, 0x86, 0x0c, 0x25, 0xe0,
				0x3c, 0x3f, 0xf8, 0x59, 0x93, 0xd3, 0xff, 0xc3, 0x5e, 0x41, 0x00, 0x00, 0x00,
			},
		},
	},
	LockTime: 0,
}

var GenesisMerkleRoot = chainhash.Hash{
		0xf6, 0x55, 0x0a, 0x6f, 0xb5, 0xa3, 0x26, 0xa6, 
		0x8a, 0xba, 0x7f, 0x4d, 0x8f, 0x30, 0xf1, 0x05, 
		0x3c, 0xa1, 0x9e, 0x65, 0x72, 0xcc, 0xf6, 0x71, 
		0x5e, 0x2d, 0xf6, 0x95, 0x68, 0x69, 0x23, 0x39, 
	}

var GenesisBlock = wire.MsgBlock{
	Header: wire.BlockHeader{
		Version:    0x10000000,
		PrevBlock:  chainhash.Hash{},
		MerkleRoot: GenesisMerkleRoot,
		Timestamp:  time.Unix(0x5eb5d69a, 0), 
		Nonce:      90809,
	},
	Transactions: []*wire.MsgTx{&genesisCoinbaseTx, &genesisInitPolygonTx},
}

var creator = [20]byte{0x2f, 0xe0, 0xef, 0x92, 0x85, 0xa1, 0xe, 0x86, 0xc, 0x25,
	0xe0, 0x3c, 0x3f, 0xf8, 0x59, 0x93, 0xd3, 0xff, 0xc3, 0x5e, }

var  GenesisHash = []chainhash.Hash{
chainhash.Hash{
		0x8c, 0x60, 0xb0, 0x9a, 0x17, 0x94, 0x53, 0xa5, 
		0x46, 0xc8, 0x06, 0xb8, 0x60, 0x1e, 0xa1, 0x9d, 
		0xbf, 0x3b, 0xf1, 0x56, 0x6e, 0x67, 0x4a, 0xd8, 
		0x4e, 0xd2, 0xe8, 0xe5, 0xd8, 0x4a, 0x00, 0x00, 
	},
chainhash.Hash{
		0x17, 0x45, 0xa4, 0x13, 0x99, 0x5f, 0x4a, 0xc7, 
		0xce, 0xc1, 0xdc, 0x3e, 0x1f, 0x73, 0x8d, 0xac, 
		0xf7, 0xc4, 0xe8, 0xa1, 0x0d, 0xdd, 0xf9, 0xb6, 
		0x32, 0x25, 0xb6, 0x7d, 0x12, 0x00, 0x00, 0x00, 
	},
}

var GenesisMinerBlock = wire.MingingRightBlock{
	Version:    GenesisBlock.Header.Version,
	PrevBlock:  chainhash.Hash{},
	BestBlock: GenesisHash[0],
	Timestamp:  GenesisBlock.Header.Timestamp, 
	Bits:      0x1f00ffff,
	Nonce:      64206,
	Miner: creator,
}

var RegTestGenesisHash = []chainhash.Hash{
chainhash.Hash{
		0xcd, 0x10, 0x21, 0x49, 0x7a, 0x7b, 0xf3, 0x13, 
		0xaa, 0x2d, 0xb9, 0xa6, 0x06, 0xd7, 0xa9, 0xaa, 
		0xd8, 0xfd, 0x76, 0x51, 0x61, 0x00, 0x9f, 0x56, 
		0x36, 0x49, 0x02, 0xf4, 0xe8, 0x17, 0x63, 0x00, 
	},
chainhash.Hash{
		0x3d, 0x74, 0x3d, 0xdb, 0x94, 0x7c, 0xc4, 0x96, 
		0x51, 0x34, 0x40, 0xe1, 0x14, 0x7a, 0x94, 0x6d, 
		0x71, 0x85, 0x09, 0x42, 0xa3, 0x22, 0x34, 0x12, 
		0xc3, 0x26, 0x00, 0x6c, 0xcd, 0x29, 0x3e, 0x00, 
	},
}

var RegTestGenesisMerkleRoot = GenesisMerkleRoot

var regGenesisCoinbaseTx = genesisCoinbaseTx

var RegTestGenesisBlock = wire.MsgBlock{
	Header: wire.BlockHeader{
		Version:    0x10000000,
		PrevBlock:  chainhash.Hash{},
		MerkleRoot: RegTestGenesisMerkleRoot,
		Timestamp:  time.Unix(0x5eb5d69b, 0), 
		Nonce:      860,
	},
	Transactions: []*wire.MsgTx{&regGenesisCoinbaseTx, &genesisInitPolygonTx},
}

var RegTestGenesisMinerBlock = wire.MingingRightBlock{
	Version:    RegTestGenesisBlock.Header.Version,
	PrevBlock:  chainhash.Hash{},
	BestBlock: RegTestGenesisHash[0],
	Timestamp:  RegTestGenesisBlock.Header.Timestamp, 
	Bits:      0x1f7fffff,
	Nonce:      41,
	Miner: creator,
}

var TestNet3GenesisHash = []chainhash.Hash{
chainhash.Hash{
		0xa5, 0xae, 0xe9, 0xcf, 0xa5, 0x1d, 0x1f, 0x8c, 
		0xb4, 0x05, 0x35, 0x78, 0x09, 0x52, 0xb3, 0x73, 
		0xc7, 0xa8, 0x4f, 0xbc, 0x00, 0xcb, 0xda, 0xa0, 
		0xe2, 0x7c, 0xb4, 0xf0, 0xff, 0xfc, 0x00, 0x00, 
	},
chainhash.Hash{
		0x86, 0x98, 0xf1, 0xd3, 0xd9, 0x90, 0xd4, 0x48, 
		0x9f, 0x9a, 0x3f, 0x16, 0x6f, 0x57, 0x50, 0xc1, 
		0x74, 0x50, 0x3f, 0x4e, 0x5f, 0x7d, 0xbb, 0xb1, 
		0x0b, 0x02, 0x0e, 0x29, 0x39, 0x67, 0x00, 0x00, 
	},
}

var TestNet3GenesisMerkleRoot = GenesisMerkleRoot

var test3netgenesisCoinbaseTx = genesisCoinbaseTx

var TestNet3GenesisBlock = wire.MsgBlock{
	Header: wire.BlockHeader{
		Version:    0x10000000,
		PrevBlock:  chainhash.Hash{},
		MerkleRoot: TestNet3GenesisMerkleRoot,
		Timestamp:  time.Unix(0x5eb5d69b, 0), 
		Nonce:      26808,
	},
	Transactions: []*wire.MsgTx{&test3netgenesisCoinbaseTx, &genesisInitPolygonTx},
}

var TestNet3GenesisMinerBlock = wire.MingingRightBlock{
	Version:    TestNet3GenesisBlock.Header.Version,
	PrevBlock:  chainhash.Hash{},
	BestBlock: TestNet3GenesisHash[0],
	Timestamp:  TestNet3GenesisBlock.Header.Timestamp, 
	Bits:      0x1f00ffff,
	Nonce:      10653,
	Miner: creator,
}

var SimNetGenesisHash = []chainhash.Hash{
chainhash.Hash{
		0x04, 0x4a, 0xe9, 0xca, 0x2a, 0xf6, 0x3b, 0x81, 
		0x6e, 0xbe, 0x36, 0x8f, 0xb3, 0xbe, 0xed, 0x47, 
		0x5e, 0x74, 0xd0, 0xef, 0x96, 0xa1, 0x9c, 0x28, 
		0xe7, 0x9f, 0x59, 0x21, 0x77, 0xe7, 0x1a, 0x00, 
	},
chainhash.Hash{
		0xb9, 0x7e, 0x3d, 0x2a, 0x5d, 0x93, 0x58, 0x8a, 
		0xd3, 0xbf, 0x06, 0x88, 0xb3, 0x30, 0x0c, 0x83, 
		0xac, 0xdf, 0xad, 0x19, 0x3c, 0xde, 0x7d, 0x23, 
		0x89, 0x33, 0x3a, 0x1d, 0x5c, 0x84, 0x65, 0x00, 
	},
}

var SimNetGenesisMerkleRoot = GenesisMerkleRoot

var simnetgenesisCoinbaseTx = genesisCoinbaseTx

var SimNetGenesisBlock = wire.MsgBlock{
	Header: wire.BlockHeader{
		Version:    0x10000000,
		PrevBlock:  chainhash.Hash{},
		MerkleRoot: SimNetGenesisMerkleRoot,
		Timestamp:  time.Unix(0x5eb5d69c, 0), 
		Nonce:      316,
	},
	Transactions: []*wire.MsgTx{&simnetgenesisCoinbaseTx, &genesisInitPolygonTx},
}

var SimNetGenesisMinerBlock = wire.MingingRightBlock{
	Version:    SimNetGenesisBlock.Header.Version,
	PrevBlock:  chainhash.Hash{},
	BestBlock: SimNetGenesisHash[0],
	Timestamp:  SimNetGenesisBlock.Header.Timestamp, 
	Bits:      0x1f7fffff,
	Nonce:      185,
	Miner: creator,
}