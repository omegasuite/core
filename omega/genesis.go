// This is generated code. Should not be manually modified.

package omega

import (
"time"
"github.com/btcsuite/btcd/chaincfg/chainhash"
"github.com/btcsuite/btcd/wire"
"github.com/btcsuite/omega/token"
)

var IntlDateLine = [][2]float64 {	// international date line
{ 90.000000, 180.000000 },
{ 75.000000, 180.000000 },
{ 68.245600, -169.000000 },
{ 65.518900, -169.000000 },
{ 53.086300, 170.050000 },
{ 47.835300, 180.000000 },
{ -1.200000, 180.000000 },
{ -1.200000, -159.650000 },
{ 2.900000, -159.650000 },
{ 2.900000, -162.850000 },
{ 6.500000, -162.850000 },
{ 6.500000, -155.950000 },
{ -9.500000, -149.650000 },
{ -11.700000, -149.650000 },
{ -11.700000, -154.050000 },
{ -10.700000, -154.050000 },
{ -10.700000, -166.550000 },
{ -15.600000, -172.700000 },
{ -45.000000, -172.700000 },
{ -51.181500, 180.000000 },
{ -90.000000, 180.000000 },
}

var InitDefs = []token.Definition{
&token.VertexDef {
Lat: 377487360,
Lng: -754974720,
},
&token.VertexDef {
Lat: 314572800,
Lng: -754974720,
},
&token.VertexDef {
Lat: 286242793,
Lng: -708837376,
},
&token.VertexDef {
Lat: 274806184,
Lng: -708837376,
},
&token.VertexDef {
Lat: 222660080,
Lng: -796708044,
},
&token.VertexDef {
Lat: 200635790,
Lng: -754974720,
},
&token.VertexDef {
Lat: -5033164,
Lng: -754974720,
},
&token.VertexDef {
Lat: -5033164,
Lng: -669620633,
},
&token.VertexDef {
Lat: 12163481,
Lng: -669620633,
},
&token.VertexDef {
Lat: 12163481,
Lng: -683042406,
},
&token.VertexDef {
Lat: 27262976,
Lng: -683042406,
},
&token.VertexDef {
Lat: 27262976,
Lng: -654101708,
},
&token.VertexDef {
Lat: -39845888,
Lng: -627677593,
},
&token.VertexDef {
Lat: -49073356,
Lng: -627677593,
},
&token.VertexDef {
Lat: -49073356,
Lng: -646132531,
},
&token.VertexDef {
Lat: -44879052,
Lng: -646132531,
},
&token.VertexDef {
Lat: -44879052,
Lng: -698561331,
},
&token.VertexDef {
Lat: -65431142,
Lng: -724356300,
},
&token.VertexDef {
Lat: -188743680,
Lng: -724356300,
},
&token.VertexDef {
Lat: -214670770,
Lng: -754974720,
},
&token.VertexDef {
Lat: -377487360,
Lng: -754974720,
},
&token.VertexDef {
Lat: -377487360,
Lng: 754974720,
},
&token.VertexDef {
Lat: -214670770,
Lng: 754974720,
},
&token.VertexDef {
Lat: -188743680,
Lng: 785593139,
},
&token.VertexDef {
Lat: -65431142,
Lng: 785593139,
},
&token.VertexDef {
Lat: -44879052,
Lng: 811388108,
},
&token.VertexDef {
Lat: -44879052,
Lng: 863816908,
},
&token.VertexDef {
Lat: -49073356,
Lng: 863816908,
},
&token.VertexDef {
Lat: -49073356,
Lng: 882271846,
},
&token.VertexDef {
Lat: -39845888,
Lng: 882271846,
},
&token.VertexDef {
Lat: 27262976,
Lng: 855847731,
},
&token.VertexDef {
Lat: 27262976,
Lng: 826907033,
},
&token.VertexDef {
Lat: 12163481,
Lng: 826907033,
},
&token.VertexDef {
Lat: 12163481,
Lng: 840328806,
},
&token.VertexDef {
Lat: -5033164,
Lng: 840328806,
},
&token.VertexDef {
Lat: -5033164,
Lng: 754974720,
},
&token.VertexDef {
Lat: 200635790,
Lng: 754974720,
},
&token.VertexDef {
Lat: 222660080,
Lng: 713241395,
},
&token.VertexDef {
Lat: 274806184,
Lng: 801112064,
},
&token.VertexDef {
Lat: 286242793,
Lng: 801112064,
},
&token.VertexDef {
Lat: 314572800,
Lng: 754974720,
},
&token.VertexDef {
Lat: 377487360,
Lng: 754974720,
},
&token.BorderDef {
Father: chainhash.Hash{},
Begin: chainhash.Hash{
0x77, 0x91, 0x42, 0x56, 0x82, 0x36, 0xaa, 0xdb,
0xe4, 0x1f, 0x77, 0xf1, 0x27, 0x7f, 0x89, 0xa6,
0xe1, 0x59, 0xb6, 0xc4, 0x04, 0x94, 0x98, 0xe6,
0x55, 0x04, 0xe2, 0xb1, 0xa0, 0xba, 0xe2, 0xd6,
},
End: chainhash.Hash{
0xe2, 0xa8, 0xe9, 0xaa, 0xe9, 0x78, 0x6b, 0x90,
0x2f, 0x6d, 0xb0, 0x2f, 0xda, 0x37, 0x39, 0x3f,
0x81, 0x16, 0x73, 0x63, 0x62, 0xac, 0xd8, 0xe3,
0x9d, 0x27, 0xe6, 0xb9, 0x86, 0xf9, 0xde, 0x6f,
},
},
&token.BorderDef {
Father: chainhash.Hash{},
Begin: chainhash.Hash{
0xe2, 0xa8, 0xe9, 0xaa, 0xe9, 0x78, 0x6b, 0x90,
0x2f, 0x6d, 0xb0, 0x2f, 0xda, 0x37, 0x39, 0x3f,
0x81, 0x16, 0x73, 0x63, 0x62, 0xac, 0xd8, 0xe3,
0x9d, 0x27, 0xe6, 0xb9, 0x86, 0xf9, 0xde, 0x6f,
},
End: chainhash.Hash{
0xa4, 0x4f, 0x09, 0xe9, 0x47, 0xff, 0xc4, 0xe2,
0xdd, 0x5a, 0x8b, 0xd8, 0x4f, 0x46, 0x71, 0xcd,
0x1a, 0x5c, 0xe0, 0xc5, 0xcd, 0x94, 0x33, 0x2a,
0x80, 0xd5, 0x4f, 0x19, 0x4f, 0x14, 0x19, 0x21,
},
},
&token.BorderDef {
Father: chainhash.Hash{},
Begin: chainhash.Hash{
0xa4, 0x4f, 0x09, 0xe9, 0x47, 0xff, 0xc4, 0xe2,
0xdd, 0x5a, 0x8b, 0xd8, 0x4f, 0x46, 0x71, 0xcd,
0x1a, 0x5c, 0xe0, 0xc5, 0xcd, 0x94, 0x33, 0x2a,
0x80, 0xd5, 0x4f, 0x19, 0x4f, 0x14, 0x19, 0x21,
},
End: chainhash.Hash{
0xa4, 0xed, 0x48, 0xb2, 0x87, 0xd3, 0x89, 0xbd,
0x28, 0x36, 0x62, 0x3b, 0xbe, 0x97, 0xa1, 0xa7,
0x6d, 0xa7, 0x90, 0xcd, 0x80, 0x5c, 0x35, 0xce,
0x64, 0x66, 0x9e, 0xd0, 0x90, 0x6b, 0xfb, 0x4d,
},
},
&token.BorderDef {
Father: chainhash.Hash{},
Begin: chainhash.Hash{
0xa4, 0xed, 0x48, 0xb2, 0x87, 0xd3, 0x89, 0xbd,
0x28, 0x36, 0x62, 0x3b, 0xbe, 0x97, 0xa1, 0xa7,
0x6d, 0xa7, 0x90, 0xcd, 0x80, 0x5c, 0x35, 0xce,
0x64, 0x66, 0x9e, 0xd0, 0x90, 0x6b, 0xfb, 0x4d,
},
End: chainhash.Hash{
0x77, 0x91, 0x42, 0x56, 0x82, 0x36, 0xaa, 0xdb,
0xe4, 0x1f, 0x77, 0xf1, 0x27, 0x7f, 0x89, 0xa6,
0xe1, 0x59, 0xb6, 0xc4, 0x04, 0x94, 0x98, 0xe6,
0x55, 0x04, 0xe2, 0xb1, 0xa0, 0xba, 0xe2, 0xd6,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x77, 0x91, 0x42, 0x56, 0x82, 0x36, 0xaa, 0xdb,
0xe4, 0x1f, 0x77, 0xf1, 0x27, 0x7f, 0x89, 0xa6,
0xe1, 0x59, 0xb6, 0xc4, 0x04, 0x94, 0x98, 0xe6,
0x55, 0x04, 0xe2, 0xb1, 0xa0, 0xba, 0xe2, 0xd6,
},
End: chainhash.Hash{
0x06, 0x01, 0x00, 0x66, 0xfa, 0xe2, 0x18, 0x0c,
0x73, 0xbd, 0xaf, 0xe1, 0xb7, 0x09, 0xd8, 0x32,
0x58, 0xd5, 0xd0, 0x3c, 0x0c, 0x49, 0x12, 0x2a,
0x49, 0x65, 0x85, 0xd0, 0xcf, 0x3b, 0xf0, 0x3c,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xa4, 0x4f, 0x09, 0xe9, 0x47, 0xff, 0xc4, 0xe2,
0xdd, 0x5a, 0x8b, 0xd8, 0x4f, 0x46, 0x71, 0xcd,
0x1a, 0x5c, 0xe0, 0xc5, 0xcd, 0x94, 0x33, 0x2a,
0x80, 0xd5, 0x4f, 0x19, 0x4f, 0x14, 0x19, 0x21,
},
End: chainhash.Hash{
0x86, 0xf6, 0x06, 0x9e, 0xea, 0xb4, 0x0a, 0x01,
0xfa, 0x6b, 0x70, 0xa9, 0xf8, 0x01, 0x04, 0xe3,
0x06, 0xb7, 0x4c, 0x41, 0x57, 0xba, 0xdf, 0xbc,
0x75, 0xe7, 0x71, 0x75, 0xc9, 0xe0, 0x7c, 0xa3,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x06, 0x01, 0x00, 0x66, 0xfa, 0xe2, 0x18, 0x0c,
0x73, 0xbd, 0xaf, 0xe1, 0xb7, 0x09, 0xd8, 0x32,
0x58, 0xd5, 0xd0, 0x3c, 0x0c, 0x49, 0x12, 0x2a,
0x49, 0x65, 0x85, 0xd0, 0xcf, 0x3b, 0xf0, 0x3c,
},
End: chainhash.Hash{
0xc1, 0xc7, 0xd7, 0x40, 0x62, 0x82, 0xd1, 0xa1,
0xe3, 0x72, 0xd2, 0xad, 0xfd, 0x98, 0x9b, 0x92,
0x78, 0x75, 0x5e, 0x22, 0x06, 0x74, 0x21, 0x67,
0xff, 0xe8, 0x8a, 0x69, 0xbc, 0xab, 0x88, 0x88,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0x86, 0xf6, 0x06, 0x9e, 0xea, 0xb4, 0x0a, 0x01,
0xfa, 0x6b, 0x70, 0xa9, 0xf8, 0x01, 0x04, 0xe3,
0x06, 0xb7, 0x4c, 0x41, 0x57, 0xba, 0xdf, 0xbc,
0x75, 0xe7, 0x71, 0x75, 0xc9, 0xe0, 0x7c, 0xa3,
},
End: chainhash.Hash{
0x6e, 0x49, 0x1f, 0x13, 0x29, 0xbe, 0x0a, 0xf5,
0xc7, 0x05, 0xab, 0xea, 0xc0, 0x13, 0x2d, 0xcf,
0xe6, 0x45, 0x67, 0xe8, 0xce, 0x24, 0xea, 0xbc,
0x6e, 0xcc, 0x1d, 0xef, 0xb8, 0x0a, 0xca, 0xd8,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0xc1, 0xc7, 0xd7, 0x40, 0x62, 0x82, 0xd1, 0xa1,
0xe3, 0x72, 0xd2, 0xad, 0xfd, 0x98, 0x9b, 0x92,
0x78, 0x75, 0x5e, 0x22, 0x06, 0x74, 0x21, 0x67,
0xff, 0xe8, 0x8a, 0x69, 0xbc, 0xab, 0x88, 0x88,
},
End: chainhash.Hash{
0x6d, 0x57, 0xf6, 0x56, 0x28, 0x11, 0xe1, 0x4c,
0x25, 0xba, 0x1b, 0x1e, 0xef, 0xda, 0xbe, 0x95,
0xdb, 0x65, 0x2c, 0x2e, 0x25, 0x96, 0x16, 0x4a,
0xc0, 0x28, 0x1a, 0xa3, 0x0b, 0xd8, 0xc2, 0x87,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0x6e, 0x49, 0x1f, 0x13, 0x29, 0xbe, 0x0a, 0xf5,
0xc7, 0x05, 0xab, 0xea, 0xc0, 0x13, 0x2d, 0xcf,
0xe6, 0x45, 0x67, 0xe8, 0xce, 0x24, 0xea, 0xbc,
0x6e, 0xcc, 0x1d, 0xef, 0xb8, 0x0a, 0xca, 0xd8,
},
End: chainhash.Hash{
0x0b, 0x7f, 0xd5, 0x10, 0x9b, 0x11, 0xd0, 0x36,
0x7a, 0x9f, 0x12, 0x71, 0x77, 0xf9, 0x5f, 0x8d,
0xd1, 0x07, 0x24, 0xb5, 0x64, 0x59, 0xa6, 0x86,
0x17, 0x5d, 0x40, 0x7f, 0xbd, 0xce, 0x22, 0x95,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x6d, 0x57, 0xf6, 0x56, 0x28, 0x11, 0xe1, 0x4c,
0x25, 0xba, 0x1b, 0x1e, 0xef, 0xda, 0xbe, 0x95,
0xdb, 0x65, 0x2c, 0x2e, 0x25, 0x96, 0x16, 0x4a,
0xc0, 0x28, 0x1a, 0xa3, 0x0b, 0xd8, 0xc2, 0x87,
},
End: chainhash.Hash{
0x0d, 0x51, 0x2e, 0x85, 0xbe, 0x9a, 0xea, 0x19,
0xc8, 0x77, 0xd5, 0x3a, 0x9a, 0x34, 0x74, 0x88,
0x43, 0x44, 0x9c, 0x49, 0x78, 0x7a, 0x1f, 0xf5,
0x60, 0xea, 0x91, 0x6e, 0xb5, 0x5b, 0x2e, 0x71,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0x0b, 0x7f, 0xd5, 0x10, 0x9b, 0x11, 0xd0, 0x36,
0x7a, 0x9f, 0x12, 0x71, 0x77, 0xf9, 0x5f, 0x8d,
0xd1, 0x07, 0x24, 0xb5, 0x64, 0x59, 0xa6, 0x86,
0x17, 0x5d, 0x40, 0x7f, 0xbd, 0xce, 0x22, 0x95,
},
End: chainhash.Hash{
0xe3, 0x29, 0x62, 0xb2, 0x8b, 0x49, 0x46, 0xf1,
0x79, 0x4e, 0xe6, 0x7c, 0x09, 0x67, 0x8b, 0x53,
0x57, 0xbb, 0xca, 0x8b, 0xcb, 0x19, 0xc0, 0x83,
0x19, 0x98, 0xdb, 0xa1, 0x83, 0x68, 0x41, 0x72,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x0d, 0x51, 0x2e, 0x85, 0xbe, 0x9a, 0xea, 0x19,
0xc8, 0x77, 0xd5, 0x3a, 0x9a, 0x34, 0x74, 0x88,
0x43, 0x44, 0x9c, 0x49, 0x78, 0x7a, 0x1f, 0xf5,
0x60, 0xea, 0x91, 0x6e, 0xb5, 0x5b, 0x2e, 0x71,
},
End: chainhash.Hash{
0xc1, 0x41, 0x83, 0x99, 0xfe, 0x86, 0x49, 0xb4,
0xcb, 0x6d, 0x04, 0x38, 0x18, 0xc2, 0xcd, 0xe3,
0x79, 0x26, 0xfa, 0xe3, 0xb4, 0xcb, 0xa9, 0xca,
0x94, 0xb7, 0x5b, 0xfb, 0xd0, 0xf2, 0x65, 0xa8,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xe3, 0x29, 0x62, 0xb2, 0x8b, 0x49, 0x46, 0xf1,
0x79, 0x4e, 0xe6, 0x7c, 0x09, 0x67, 0x8b, 0x53,
0x57, 0xbb, 0xca, 0x8b, 0xcb, 0x19, 0xc0, 0x83,
0x19, 0x98, 0xdb, 0xa1, 0x83, 0x68, 0x41, 0x72,
},
End: chainhash.Hash{
0x30, 0xac, 0x4e, 0x66, 0x2b, 0x69, 0xb6, 0x83,
0x0f, 0x04, 0x1a, 0x17, 0x48, 0x43, 0xde, 0x54,
0x0e, 0x54, 0x67, 0xab, 0xed, 0xfa, 0x90, 0xba,
0x13, 0x1f, 0xb0, 0x83, 0x5d, 0x40, 0x66, 0xbd,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0xc1, 0x41, 0x83, 0x99, 0xfe, 0x86, 0x49, 0xb4,
0xcb, 0x6d, 0x04, 0x38, 0x18, 0xc2, 0xcd, 0xe3,
0x79, 0x26, 0xfa, 0xe3, 0xb4, 0xcb, 0xa9, 0xca,
0x94, 0xb7, 0x5b, 0xfb, 0xd0, 0xf2, 0x65, 0xa8,
},
End: chainhash.Hash{
0xbf, 0x0b, 0x34, 0x0e, 0x1d, 0xa2, 0x32, 0xe8,
0xdf, 0x9f, 0x9a, 0x03, 0x0b, 0xfc, 0x2e, 0x51,
0x39, 0x09, 0xd3, 0xb4, 0x22, 0x20, 0x49, 0xdd,
0x08, 0xce, 0xdf, 0x2c, 0x1c, 0x31, 0x70, 0x33,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0x30, 0xac, 0x4e, 0x66, 0x2b, 0x69, 0xb6, 0x83,
0x0f, 0x04, 0x1a, 0x17, 0x48, 0x43, 0xde, 0x54,
0x0e, 0x54, 0x67, 0xab, 0xed, 0xfa, 0x90, 0xba,
0x13, 0x1f, 0xb0, 0x83, 0x5d, 0x40, 0x66, 0xbd,
},
End: chainhash.Hash{
0xca, 0xff, 0x2b, 0x7f, 0x74, 0x7d, 0x81, 0x4d,
0xc7, 0x4c, 0x8b, 0x19, 0x17, 0xcb, 0x58, 0x8c,
0xe8, 0x9c, 0xe0, 0x70, 0x94, 0x63, 0x93, 0x84,
0xab, 0xa2, 0xea, 0x72, 0xd8, 0xb9, 0x9a, 0xdd,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0xbf, 0x0b, 0x34, 0x0e, 0x1d, 0xa2, 0x32, 0xe8,
0xdf, 0x9f, 0x9a, 0x03, 0x0b, 0xfc, 0x2e, 0x51,
0x39, 0x09, 0xd3, 0xb4, 0x22, 0x20, 0x49, 0xdd,
0x08, 0xce, 0xdf, 0x2c, 0x1c, 0x31, 0x70, 0x33,
},
End: chainhash.Hash{
0x96, 0x5a, 0xad, 0xf9, 0xb0, 0xc0, 0x7c, 0x1a,
0x83, 0x31, 0x2f, 0x7a, 0x66, 0xa8, 0xe6, 0xbe,
0x02, 0x49, 0x0b, 0x7b, 0x62, 0x8e, 0x06, 0x8b,
0x6d, 0x76, 0xb8, 0x24, 0xbb, 0x25, 0x83, 0xcc,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xca, 0xff, 0x2b, 0x7f, 0x74, 0x7d, 0x81, 0x4d,
0xc7, 0x4c, 0x8b, 0x19, 0x17, 0xcb, 0x58, 0x8c,
0xe8, 0x9c, 0xe0, 0x70, 0x94, 0x63, 0x93, 0x84,
0xab, 0xa2, 0xea, 0x72, 0xd8, 0xb9, 0x9a, 0xdd,
},
End: chainhash.Hash{
0x74, 0x74, 0x1c, 0xf9, 0x47, 0xd4, 0x8d, 0xd9,
0x1a, 0x3d, 0x10, 0x50, 0x9c, 0xdc, 0x2f, 0x56,
0xb8, 0x78, 0xc4, 0xbb, 0x06, 0x09, 0xb1, 0x43,
0xeb, 0xe7, 0x93, 0x8d, 0x7e, 0x3e, 0xd7, 0x16,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x96, 0x5a, 0xad, 0xf9, 0xb0, 0xc0, 0x7c, 0x1a,
0x83, 0x31, 0x2f, 0x7a, 0x66, 0xa8, 0xe6, 0xbe,
0x02, 0x49, 0x0b, 0x7b, 0x62, 0x8e, 0x06, 0x8b,
0x6d, 0x76, 0xb8, 0x24, 0xbb, 0x25, 0x83, 0xcc,
},
End: chainhash.Hash{
0xf1, 0x2f, 0xf4, 0x1e, 0xbe, 0x66, 0x99, 0xad,
0x32, 0x21, 0x79, 0xe1, 0x18, 0xdd, 0x8f, 0xd2,
0xeb, 0xd0, 0xf6, 0x73, 0xb3, 0x84, 0xf8, 0x76,
0x76, 0xb2, 0x71, 0x34, 0x9a, 0xba, 0xa3, 0xe7,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0x74, 0x74, 0x1c, 0xf9, 0x47, 0xd4, 0x8d, 0xd9,
0x1a, 0x3d, 0x10, 0x50, 0x9c, 0xdc, 0x2f, 0x56,
0xb8, 0x78, 0xc4, 0xbb, 0x06, 0x09, 0xb1, 0x43,
0xeb, 0xe7, 0x93, 0x8d, 0x7e, 0x3e, 0xd7, 0x16,
},
End: chainhash.Hash{
0xc9, 0xf3, 0x92, 0x63, 0x16, 0x40, 0x4b, 0x99,
0x30, 0xb1, 0x87, 0xf6, 0xcb, 0x83, 0x6d, 0x75,
0x45, 0x57, 0x4a, 0x0c, 0xb6, 0x1a, 0x96, 0x52,
0x33, 0x28, 0x98, 0xd7, 0x6d, 0xec, 0x43, 0x81,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0xf1, 0x2f, 0xf4, 0x1e, 0xbe, 0x66, 0x99, 0xad,
0x32, 0x21, 0x79, 0xe1, 0x18, 0xdd, 0x8f, 0xd2,
0xeb, 0xd0, 0xf6, 0x73, 0xb3, 0x84, 0xf8, 0x76,
0x76, 0xb2, 0x71, 0x34, 0x9a, 0xba, 0xa3, 0xe7,
},
End: chainhash.Hash{
0x9f, 0xef, 0x73, 0xe5, 0xde, 0xa5, 0xa5, 0xc9,
0x73, 0x65, 0xfc, 0x9b, 0xad, 0x6b, 0x91, 0x40,
0x06, 0x1d, 0x20, 0x2f, 0x31, 0x65, 0xbc, 0x73,
0xc0, 0x07, 0x17, 0x04, 0x1c, 0x36, 0xae, 0x75,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xc9, 0xf3, 0x92, 0x63, 0x16, 0x40, 0x4b, 0x99,
0x30, 0xb1, 0x87, 0xf6, 0xcb, 0x83, 0x6d, 0x75,
0x45, 0x57, 0x4a, 0x0c, 0xb6, 0x1a, 0x96, 0x52,
0x33, 0x28, 0x98, 0xd7, 0x6d, 0xec, 0x43, 0x81,
},
End: chainhash.Hash{
0x1c, 0x6e, 0x23, 0xbb, 0x2f, 0xb7, 0x2e, 0x06,
0xdb, 0xea, 0x67, 0x54, 0x82, 0x62, 0x60, 0xbf,
0xe6, 0x77, 0xe1, 0x7a, 0x85, 0xcb, 0x0f, 0xb5,
0x6b, 0x48, 0xcf, 0x4d, 0x40, 0x8d, 0x17, 0x82,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x9f, 0xef, 0x73, 0xe5, 0xde, 0xa5, 0xa5, 0xc9,
0x73, 0x65, 0xfc, 0x9b, 0xad, 0x6b, 0x91, 0x40,
0x06, 0x1d, 0x20, 0x2f, 0x31, 0x65, 0xbc, 0x73,
0xc0, 0x07, 0x17, 0x04, 0x1c, 0x36, 0xae, 0x75,
},
End: chainhash.Hash{
0x2d, 0xbd, 0xc6, 0xb3, 0x11, 0x34, 0x62, 0xbc,
0x1d, 0xcb, 0x60, 0x04, 0x06, 0x7d, 0xf9, 0xe0,
0x5e, 0x3a, 0x9b, 0xe3, 0x75, 0xfc, 0xe4, 0x2c,
0x64, 0x89, 0x92, 0xc5, 0x5d, 0xa9, 0xb5, 0x9f,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0x1c, 0x6e, 0x23, 0xbb, 0x2f, 0xb7, 0x2e, 0x06,
0xdb, 0xea, 0x67, 0x54, 0x82, 0x62, 0x60, 0xbf,
0xe6, 0x77, 0xe1, 0x7a, 0x85, 0xcb, 0x0f, 0xb5,
0x6b, 0x48, 0xcf, 0x4d, 0x40, 0x8d, 0x17, 0x82,
},
End: chainhash.Hash{
0xf5, 0x6a, 0xf1, 0x0a, 0x14, 0xba, 0x37, 0xae,
0xeb, 0x41, 0xc2, 0xc1, 0x1b, 0x67, 0x1a, 0xb7,
0x1c, 0xd3, 0x42, 0xee, 0xac, 0x48, 0xd8, 0x20,
0x0e, 0xdd, 0xbc, 0x2a, 0xfe, 0x1a, 0x57, 0x5d,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x2d, 0xbd, 0xc6, 0xb3, 0x11, 0x34, 0x62, 0xbc,
0x1d, 0xcb, 0x60, 0x04, 0x06, 0x7d, 0xf9, 0xe0,
0x5e, 0x3a, 0x9b, 0xe3, 0x75, 0xfc, 0xe4, 0x2c,
0x64, 0x89, 0x92, 0xc5, 0x5d, 0xa9, 0xb5, 0x9f,
},
End: chainhash.Hash{
0xc7, 0x04, 0x12, 0x9d, 0x0b, 0x50, 0x8f, 0x2e,
0xdb, 0xde, 0x53, 0xfe, 0x21, 0x4f, 0x34, 0x80,
0x4c, 0x2b, 0xb8, 0x63, 0x4e, 0x75, 0xbd, 0x4b,
0x9e, 0x6a, 0x72, 0xfa, 0x0e, 0x71, 0x40, 0x43,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xf5, 0x6a, 0xf1, 0x0a, 0x14, 0xba, 0x37, 0xae,
0xeb, 0x41, 0xc2, 0xc1, 0x1b, 0x67, 0x1a, 0xb7,
0x1c, 0xd3, 0x42, 0xee, 0xac, 0x48, 0xd8, 0x20,
0x0e, 0xdd, 0xbc, 0x2a, 0xfe, 0x1a, 0x57, 0x5d,
},
End: chainhash.Hash{
0xf2, 0xbe, 0x0e, 0x49, 0xdc, 0x35, 0xa6, 0x3f,
0x9a, 0x36, 0xd7, 0x70, 0x46, 0x50, 0xc9, 0x8f,
0x30, 0x7d, 0xb4, 0x67, 0x8b, 0xb6, 0xe9, 0x08,
0x12, 0x49, 0xc6, 0xea, 0x27, 0xfd, 0x9b, 0x5a,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0xc7, 0x04, 0x12, 0x9d, 0x0b, 0x50, 0x8f, 0x2e,
0xdb, 0xde, 0x53, 0xfe, 0x21, 0x4f, 0x34, 0x80,
0x4c, 0x2b, 0xb8, 0x63, 0x4e, 0x75, 0xbd, 0x4b,
0x9e, 0x6a, 0x72, 0xfa, 0x0e, 0x71, 0x40, 0x43,
},
End: chainhash.Hash{
0xc1, 0x08, 0xbd, 0x24, 0xe6, 0x5b, 0x40, 0xea,
0x0c, 0x78, 0x4f, 0x92, 0x67, 0xfc, 0x14, 0x95,
0xd7, 0x53, 0xdf, 0x60, 0x45, 0xb1, 0xd2, 0x9e,
0x2e, 0xc6, 0x7d, 0xad, 0xcd, 0x6b, 0xed, 0x6a,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xf2, 0xbe, 0x0e, 0x49, 0xdc, 0x35, 0xa6, 0x3f,
0x9a, 0x36, 0xd7, 0x70, 0x46, 0x50, 0xc9, 0x8f,
0x30, 0x7d, 0xb4, 0x67, 0x8b, 0xb6, 0xe9, 0x08,
0x12, 0x49, 0xc6, 0xea, 0x27, 0xfd, 0x9b, 0x5a,
},
End: chainhash.Hash{
0xd1, 0x64, 0xa7, 0xa6, 0x38, 0x65, 0x90, 0x8f,
0xc3, 0x68, 0xb1, 0xe3, 0xfe, 0x87, 0xa2, 0x5a,
0x20, 0x40, 0xe7, 0xb2, 0x96, 0x3d, 0x61, 0x21,
0x21, 0x98, 0x63, 0xe1, 0xd6, 0x95, 0xac, 0x60,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0xc1, 0x08, 0xbd, 0x24, 0xe6, 0x5b, 0x40, 0xea,
0x0c, 0x78, 0x4f, 0x92, 0x67, 0xfc, 0x14, 0x95,
0xd7, 0x53, 0xdf, 0x60, 0x45, 0xb1, 0xd2, 0x9e,
0x2e, 0xc6, 0x7d, 0xad, 0xcd, 0x6b, 0xed, 0x6a,
},
End: chainhash.Hash{
0x53, 0x62, 0x80, 0x7b, 0x4c, 0x19, 0xbc, 0x16,
0x5b, 0x03, 0x25, 0xcc, 0xaa, 0x74, 0xe6, 0xf6,
0xfb, 0x92, 0x48, 0xaf, 0x1c, 0xea, 0x69, 0x45,
0x16, 0x8d, 0xba, 0x83, 0xd8, 0x29, 0x19, 0xe1,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xd1, 0x64, 0xa7, 0xa6, 0x38, 0x65, 0x90, 0x8f,
0xc3, 0x68, 0xb1, 0xe3, 0xfe, 0x87, 0xa2, 0x5a,
0x20, 0x40, 0xe7, 0xb2, 0x96, 0x3d, 0x61, 0x21,
0x21, 0x98, 0x63, 0xe1, 0xd6, 0x95, 0xac, 0x60,
},
End: chainhash.Hash{
0x9b, 0x7f, 0x0f, 0x95, 0xd4, 0xf1, 0x7a, 0xe7,
0xea, 0x4c, 0xca, 0x74, 0x95, 0x60, 0x29, 0x66,
0xc5, 0x0d, 0x5a, 0xb0, 0x58, 0x69, 0x72, 0x38,
0xcd, 0xd8, 0xd1, 0x24, 0xd2, 0x24, 0xf6, 0x17,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x53, 0x62, 0x80, 0x7b, 0x4c, 0x19, 0xbc, 0x16,
0x5b, 0x03, 0x25, 0xcc, 0xaa, 0x74, 0xe6, 0xf6,
0xfb, 0x92, 0x48, 0xaf, 0x1c, 0xea, 0x69, 0x45,
0x16, 0x8d, 0xba, 0x83, 0xd8, 0x29, 0x19, 0xe1,
},
End: chainhash.Hash{
0xc6, 0xfd, 0x3d, 0x18, 0x50, 0xd4, 0x45, 0xdf,
0x30, 0x0a, 0x46, 0xb9, 0x30, 0x33, 0x7d, 0x0e,
0xa1, 0xe9, 0xe3, 0xf2, 0x05, 0xc3, 0x8c, 0x9f,
0x7d, 0x7e, 0xf1, 0x7d, 0x2d, 0x03, 0xb6, 0xff,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0x9b, 0x7f, 0x0f, 0x95, 0xd4, 0xf1, 0x7a, 0xe7,
0xea, 0x4c, 0xca, 0x74, 0x95, 0x60, 0x29, 0x66,
0xc5, 0x0d, 0x5a, 0xb0, 0x58, 0x69, 0x72, 0x38,
0xcd, 0xd8, 0xd1, 0x24, 0xd2, 0x24, 0xf6, 0x17,
},
End: chainhash.Hash{
0xf9, 0x0c, 0x49, 0x05, 0x0c, 0x02, 0x66, 0x71,
0x4c, 0xc9, 0x06, 0x09, 0xd3, 0x3b, 0xdd, 0xb3,
0xb0, 0x9a, 0x17, 0x24, 0x54, 0x5d, 0xe1, 0x3a,
0x22, 0x28, 0x13, 0x5f, 0x09, 0x04, 0xf0, 0x78,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0xc6, 0xfd, 0x3d, 0x18, 0x50, 0xd4, 0x45, 0xdf,
0x30, 0x0a, 0x46, 0xb9, 0x30, 0x33, 0x7d, 0x0e,
0xa1, 0xe9, 0xe3, 0xf2, 0x05, 0xc3, 0x8c, 0x9f,
0x7d, 0x7e, 0xf1, 0x7d, 0x2d, 0x03, 0xb6, 0xff,
},
End: chainhash.Hash{
0xb4, 0x96, 0x9a, 0xae, 0x95, 0x9f, 0xba, 0x24,
0x8f, 0xf6, 0xb6, 0xb2, 0xc6, 0x32, 0x7b, 0x27,
0x8b, 0x12, 0xfe, 0x06, 0xf2, 0x10, 0xce, 0x24,
0x0c, 0x6a, 0x65, 0x1b, 0x24, 0x0b, 0xb1, 0xb2,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xf9, 0x0c, 0x49, 0x05, 0x0c, 0x02, 0x66, 0x71,
0x4c, 0xc9, 0x06, 0x09, 0xd3, 0x3b, 0xdd, 0xb3,
0xb0, 0x9a, 0x17, 0x24, 0x54, 0x5d, 0xe1, 0x3a,
0x22, 0x28, 0x13, 0x5f, 0x09, 0x04, 0xf0, 0x78,
},
End: chainhash.Hash{
0xaf, 0xff, 0xaf, 0x02, 0x5a, 0xbf, 0xa5, 0x16,
0x99, 0x42, 0x89, 0xed, 0x35, 0x9e, 0x16, 0xd6,
0x74, 0x1b, 0x5c, 0x7a, 0xd5, 0x7e, 0xb5, 0x6b,
0xdc, 0xec, 0x27, 0x3f, 0x66, 0xd1, 0xdc, 0x4f,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0xb4, 0x96, 0x9a, 0xae, 0x95, 0x9f, 0xba, 0x24,
0x8f, 0xf6, 0xb6, 0xb2, 0xc6, 0x32, 0x7b, 0x27,
0x8b, 0x12, 0xfe, 0x06, 0xf2, 0x10, 0xce, 0x24,
0x0c, 0x6a, 0x65, 0x1b, 0x24, 0x0b, 0xb1, 0xb2,
},
End: chainhash.Hash{
0x7f, 0xb3, 0x50, 0x39, 0x11, 0x0c, 0xdc, 0x5c,
0xf9, 0x51, 0x29, 0x75, 0x1a, 0x75, 0x55, 0x52,
0xc0, 0xeb, 0x95, 0x10, 0x20, 0x1b, 0x98, 0x83,
0x3b, 0xb7, 0xc6, 0xe6, 0xa9, 0xf6, 0x6a, 0xbd,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xaf, 0xff, 0xaf, 0x02, 0x5a, 0xbf, 0xa5, 0x16,
0x99, 0x42, 0x89, 0xed, 0x35, 0x9e, 0x16, 0xd6,
0x74, 0x1b, 0x5c, 0x7a, 0xd5, 0x7e, 0xb5, 0x6b,
0xdc, 0xec, 0x27, 0x3f, 0x66, 0xd1, 0xdc, 0x4f,
},
End: chainhash.Hash{
0xa2, 0x7c, 0x60, 0x09, 0x97, 0xb6, 0x5f, 0xe4,
0x19, 0xf2, 0x57, 0x08, 0x1f, 0x5b, 0x47, 0x23,
0xdd, 0xd1, 0x34, 0x92, 0x6c, 0xc3, 0x2c, 0xac,
0x6a, 0x5b, 0xab, 0x3b, 0x19, 0x46, 0x5c, 0xfa,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x7f, 0xb3, 0x50, 0x39, 0x11, 0x0c, 0xdc, 0x5c,
0xf9, 0x51, 0x29, 0x75, 0x1a, 0x75, 0x55, 0x52,
0xc0, 0xeb, 0x95, 0x10, 0x20, 0x1b, 0x98, 0x83,
0x3b, 0xb7, 0xc6, 0xe6, 0xa9, 0xf6, 0x6a, 0xbd,
},
End: chainhash.Hash{
0x33, 0x1a, 0xc3, 0x57, 0x8a, 0x1b, 0x3e, 0x61,
0x5b, 0x88, 0x11, 0xad, 0xf3, 0x37, 0x93, 0x5f,
0x42, 0xa9, 0x74, 0x57, 0x9b, 0xa6, 0xfd, 0xf1,
0x76, 0x89, 0x3d, 0xb8, 0xf5, 0x79, 0xfd, 0x4a,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xa2, 0x7c, 0x60, 0x09, 0x97, 0xb6, 0x5f, 0xe4,
0x19, 0xf2, 0x57, 0x08, 0x1f, 0x5b, 0x47, 0x23,
0xdd, 0xd1, 0x34, 0x92, 0x6c, 0xc3, 0x2c, 0xac,
0x6a, 0x5b, 0xab, 0x3b, 0x19, 0x46, 0x5c, 0xfa,
},
End: chainhash.Hash{
0x52, 0x75, 0x14, 0x10, 0x34, 0xe7, 0x61, 0x35,
0x15, 0xde, 0xac, 0xe9, 0x50, 0x94, 0x58, 0x1d,
0x11, 0xbd, 0x88, 0x28, 0xb9, 0xc0, 0x7f, 0x6c,
0xa1, 0x5a, 0x6b, 0xfe, 0xba, 0xcf, 0x65, 0xd9,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x33, 0x1a, 0xc3, 0x57, 0x8a, 0x1b, 0x3e, 0x61,
0x5b, 0x88, 0x11, 0xad, 0xf3, 0x37, 0x93, 0x5f,
0x42, 0xa9, 0x74, 0x57, 0x9b, 0xa6, 0xfd, 0xf1,
0x76, 0x89, 0x3d, 0xb8, 0xf5, 0x79, 0xfd, 0x4a,
},
End: chainhash.Hash{
0xa5, 0x5c, 0x2a, 0x0f, 0x8f, 0xe7, 0x4a, 0xfc,
0x7b, 0xc6, 0xa9, 0x7c, 0xe1, 0xe3, 0xa3, 0x52,
0xa5, 0x28, 0x34, 0x32, 0x46, 0x0b, 0xbb, 0x46,
0xd0, 0x24, 0x15, 0x28, 0x45, 0x4d, 0xcf, 0x46,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0x52, 0x75, 0x14, 0x10, 0x34, 0xe7, 0x61, 0x35,
0x15, 0xde, 0xac, 0xe9, 0x50, 0x94, 0x58, 0x1d,
0x11, 0xbd, 0x88, 0x28, 0xb9, 0xc0, 0x7f, 0x6c,
0xa1, 0x5a, 0x6b, 0xfe, 0xba, 0xcf, 0x65, 0xd9,
},
End: chainhash.Hash{
0x14, 0xda, 0xe1, 0xa7, 0x55, 0x1a, 0x1a, 0x18,
0x17, 0xaa, 0x9a, 0x41, 0xda, 0x86, 0x3a, 0x92,
0x16, 0x26, 0x75, 0x52, 0xad, 0x44, 0x03, 0x66,
0xca, 0x45, 0x5b, 0x93, 0xb9, 0x4d, 0x1b, 0xa1,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0xa5, 0x5c, 0x2a, 0x0f, 0x8f, 0xe7, 0x4a, 0xfc,
0x7b, 0xc6, 0xa9, 0x7c, 0xe1, 0xe3, 0xa3, 0x52,
0xa5, 0x28, 0x34, 0x32, 0x46, 0x0b, 0xbb, 0x46,
0xd0, 0x24, 0x15, 0x28, 0x45, 0x4d, 0xcf, 0x46,
},
End: chainhash.Hash{
0x14, 0x5d, 0xd7, 0xd8, 0x80, 0xd2, 0xc0, 0x53,
0x4b, 0x8a, 0x14, 0x79, 0x55, 0x4d, 0xb2, 0xc8,
0xc6, 0x86, 0xa2, 0x73, 0xca, 0x11, 0x32, 0x46,
0x0e, 0x6f, 0x12, 0xa3, 0x38, 0x89, 0xc2, 0xe6,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0x14, 0xda, 0xe1, 0xa7, 0x55, 0x1a, 0x1a, 0x18,
0x17, 0xaa, 0x9a, 0x41, 0xda, 0x86, 0x3a, 0x92,
0x16, 0x26, 0x75, 0x52, 0xad, 0x44, 0x03, 0x66,
0xca, 0x45, 0x5b, 0x93, 0xb9, 0x4d, 0x1b, 0xa1,
},
End: chainhash.Hash{
0xb8, 0xcf, 0x97, 0x84, 0x8a, 0x48, 0xc6, 0x1e,
0xf7, 0x05, 0x7d, 0xbb, 0x1e, 0xed, 0x0e, 0xef,
0x79, 0xa3, 0xee, 0xea, 0x0c, 0x4d, 0x46, 0x16,
0x56, 0x0a, 0x48, 0x56, 0x73, 0x3e, 0xa4, 0xf7,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
Begin: chainhash.Hash{
0x14, 0x5d, 0xd7, 0xd8, 0x80, 0xd2, 0xc0, 0x53,
0x4b, 0x8a, 0x14, 0x79, 0x55, 0x4d, 0xb2, 0xc8,
0xc6, 0x86, 0xa2, 0x73, 0xca, 0x11, 0x32, 0x46,
0x0e, 0x6f, 0x12, 0xa3, 0x38, 0x89, 0xc2, 0xe6,
},
End: chainhash.Hash{
0xe2, 0xa8, 0xe9, 0xaa, 0xe9, 0x78, 0x6b, 0x90,
0x2f, 0x6d, 0xb0, 0x2f, 0xda, 0x37, 0x39, 0x3f,
0x81, 0x16, 0x73, 0x63, 0x62, 0xac, 0xd8, 0xe3,
0x9d, 0x27, 0xe6, 0xb9, 0x86, 0xf9, 0xde, 0x6f,
},
},
&token.BorderDef {
Father: chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
Begin: chainhash.Hash{
0xb8, 0xcf, 0x97, 0x84, 0x8a, 0x48, 0xc6, 0x1e,
0xf7, 0x05, 0x7d, 0xbb, 0x1e, 0xed, 0x0e, 0xef,
0x79, 0xa3, 0xee, 0xea, 0x0c, 0x4d, 0x46, 0x16,
0x56, 0x0a, 0x48, 0x56, 0x73, 0x3e, 0xa4, 0xf7,
},
End: chainhash.Hash{
0xa4, 0xed, 0x48, 0xb2, 0x87, 0xd3, 0x89, 0xbd,
0x28, 0x36, 0x62, 0x3b, 0xbe, 0x97, 0xa1, 0xa7,
0x6d, 0xa7, 0x90, 0xcd, 0x80, 0x5c, 0x35, 0xce,
0x64, 0x66, 0x9e, 0xd0, 0x90, 0x6b, 0xfb, 0x4d,
},
},
&token.PolygonDef {	Loops: []token.LoopDef{{	// Loop 0:
chainhash.Hash{
0xe6, 0x36, 0x14, 0x92, 0x39, 0x61, 0x5c, 0x30,
0x20, 0xa3, 0x83, 0xee, 0x34, 0xb7, 0x75, 0x25,
0xd9, 0x1d, 0xa4, 0x0d, 0x82, 0xd1, 0xf7, 0x82,
0x0a, 0x02, 0xc9, 0xde, 0x53, 0xdf, 0xd4, 0x25,
},
chainhash.Hash{
0x22, 0x74, 0xf1, 0xaf, 0xa4, 0xb0, 0x3b, 0x9d,
0x82, 0x45, 0xfb, 0x93, 0x92, 0x06, 0xc7, 0x99,
0x1a, 0x10, 0xee, 0xec, 0x47, 0xec, 0x1d, 0x98,
0x04, 0x33, 0xd7, 0x92, 0x6d, 0x04, 0xf1, 0x10,
},
chainhash.Hash{
0x3c, 0x4d, 0x0e, 0x54, 0xee, 0xca, 0x08, 0x0a,
0x9f, 0x18, 0xe6, 0x3d, 0xbb, 0xb7, 0x54, 0xaa,
0x2e, 0x1c, 0xcb, 0x21, 0x7d, 0x4e, 0x1e, 0xf8,
0x23, 0x98, 0x78, 0x5e, 0x42, 0x9f, 0x69, 0x45,
},
chainhash.Hash{
0xbc, 0x97, 0x6e, 0x14, 0x8f, 0xa1, 0xa3, 0x44,
0x60, 0x8f, 0x48, 0xf0, 0x54, 0xac, 0x3d, 0x5a,
0x87, 0x30, 0xb1, 0x3f, 0x1e, 0x98, 0x81, 0x09,
0x19, 0x05, 0xc8, 0x14, 0xbb, 0xe2, 0x68, 0x9e,
},
},
},
},
&token.RightDef {Father: chainhash.Hash{},
Desc: []byte("All Rights"),
Attrib: 3,
},
}

var coinToken = token.Token{
TokenType: 0,
Value: &token.NumToken{Val: 5000000000},
Rights: &chainhash.Hash{},
}

var genesisCoinbaseTx = wire.MsgTx{
Version: 1,
TxDef: []token.Definition{},
TxIn: []*wire.TxIn{
{
PreviousOutPoint: wire.OutPoint{
Hash:  chainhash.Hash{},
Index: 0,
},
SignatureIndex: 0xffffffff,
Sequence: 0xffffffff,
},
},
TxOut: []*wire.TxOut{
{
Token:coinToken,
PkScript: []byte{
0x6f, 0x2f, 0xe0, 0xef, 0x92, 0x85, 0xa1, 0x0e, 0x86, 0x0c, 0x25, 0xe0,
0x3c, 0x3f, 0xf8, 0x59, 0x93, 0xd3, 0xff, 0xc3, 0x5e, 0x41, 0x00, 0x00, 0x00,
},
},
},
SignatureScripts: [][]byte { []byte{
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0,
} },
LockTime: 0,
}

var polygonToken = token.Token{
TokenType: 3,
Value: &token.HashToken{Hash: chainhash.Hash{
0xec, 0x5a, 0xb2, 0xc0, 0xb8, 0xe1, 0xd1, 0x93,
0x7c, 0x2b, 0xe7, 0x43, 0xa9, 0x7b, 0xd4, 0xc8,
0x8c, 0xd0, 0x22, 0x62, 0x63, 0xb9, 0x76, 0x4b,
0x04, 0x54, 0x15, 0x16, 0xf0, 0x60, 0x8a, 0x6c,
}},
Rights: &chainhash.Hash{
0x26, 0x76, 0x88, 0xb6, 0x9c, 0x2b, 0xba, 0xa2,
0x8c, 0x3c, 0x32, 0x16, 0x3a, 0x92, 0x41, 0x50,
0x1a, 0xbd, 0x95, 0x8a, 0xe3, 0xca, 0x2b, 0x60,
0xee, 0x9a, 0x8f, 0xd0, 0xc2, 0xec, 0xe6, 0x59,
},
}

var genesisInitPolygonTx = wire.MsgTx{
Version: 1,
TxDef: InitDefs,
TxIn: []*wire.TxIn{},
TxOut: []*wire.TxOut{
{
Token: polygonToken,
PkScript: []byte{
0x6f, 0x2f, 0xe0, 0xef, 0x92, 0x85, 0xa1, 0x0e, 0x86, 0x0c, 0x25, 0xe0,
0x3c, 0x3f, 0xf8, 0x59, 0x93, 0xd3, 0xff, 0xc3, 0x5e, 0x41, 0x00, 0x00, 0x00,
},
},
},
LockTime: 0,
}

var GenesisMerkleRoot = chainhash.Hash{
0x83, 0x95, 0x3f, 0x76, 0x0f, 0xbd, 0xed, 0x8d,
0xdc, 0x40, 0xd1, 0x04, 0x03, 0xf1, 0xcc, 0x28,
0xaa, 0x85, 0xe2, 0xfc, 0x2f, 0x4b, 0xc2, 0xce,
0x55, 0x41, 0x08, 0xf0, 0xd5, 0x87, 0x00, 0x8c,
}

var GenesisBlock = wire.MsgBlock{
Header: wire.BlockHeader{
Version:    0x10000000,
PrevBlock:  chainhash.Hash{},
MerkleRoot: GenesisMerkleRoot,
Timestamp:  time.Unix(0x5e5086f3, 0),
Nonce:      159605,
},
Transactions: []*wire.MsgTx{&genesisCoinbaseTx, &genesisInitPolygonTx},
}

var creator = []byte{0x2f, 0xe0, 0xef, 0x92, 0x85, 0xa1, 0xe, 0x86, 0xc, 0x25,
0xe0, 0x3c, 0x3f, 0xf8, 0x59, 0x93, 0xd3, 0xff, 0xc3, 0x5e, }

var  GenesisHash = []chainhash.Hash{
chainhash.Hash{
0xd9, 0xc8, 0xd5, 0x3a, 0xd8, 0x80, 0x9a, 0xd4,
0x7a, 0x2b, 0x3f, 0x6c, 0xa2, 0x6a, 0x88, 0xb9,
0x0b, 0xdf, 0xb6, 0x1c, 0x7f, 0xd6, 0x25, 0x5e,
0xa5, 0xa7, 0x4f, 0xfe, 0x99, 0xb8, 0x00, 0x00,
},
chainhash.Hash{
0x9a, 0x9d, 0xd4, 0xf7, 0xea, 0x83, 0x79, 0xcf,
0x1c, 0x50, 0x1e, 0x42, 0xd3, 0x99, 0x13, 0xf6,
0x28, 0x75, 0xe8, 0xdd, 0x5f, 0xe5, 0x6d, 0xe7,
0x81, 0xdf, 0x0b, 0x99, 0x0f, 0x69, 0x00, 0x00,
},
}

var GenesisMinerBlock = wire.MingingRightBlock{
Version:    GenesisBlock.Header.Version,
PrevBlock:  chainhash.Hash{},
BestBlock: GenesisHash[0],
Timestamp:  GenesisBlock.Header.Timestamp,
Bits:      0x1f00ffff,
Nonce:      243481,
Miner: creator,
}

var RegTestGenesisHash = []chainhash.Hash{
chainhash.Hash{
0x81, 0x2e, 0x47, 0xa6, 0xc0, 0x6a, 0x16, 0x7b,
0x15, 0xce, 0xaf, 0x04, 0xa1, 0xbb, 0x29, 0x3e,
0x8a, 0xfc, 0x92, 0x97, 0x4c, 0xe4, 0x68, 0xd7,
0xf1, 0x5e, 0x1f, 0xd6, 0xb0, 0x65, 0x28, 0x00,
},
chainhash.Hash{
0xc7, 0xbb, 0xdc, 0x3e, 0x5c, 0xf1, 0x91, 0xa6,
0x1c, 0xb4, 0x66, 0xfc, 0x24, 0xe4, 0xe7, 0xf4,
0x97, 0x2c, 0xa5, 0x64, 0x3c, 0x53, 0x97, 0xaa,
0x5c, 0x26, 0x43, 0x6c, 0x8c, 0x0a, 0x3d, 0x00,
},
}

var RegTestGenesisMerkleRoot = GenesisMerkleRoot

var regGenesisCoinbaseTx = genesisCoinbaseTx

var RegTestGenesisBlock = wire.MsgBlock{
Header: wire.BlockHeader{
Version:    0x10000000,
PrevBlock:  chainhash.Hash{},
MerkleRoot: RegTestGenesisMerkleRoot,
Timestamp:  time.Unix(0x5e508804, 0),
Nonce:      479,
},
Transactions: []*wire.MsgTx{&regGenesisCoinbaseTx, &genesisInitPolygonTx},
}

var RegTestGenesisMinerBlock = wire.MingingRightBlock{
Version:    RegTestGenesisBlock.Header.Version,
PrevBlock:  chainhash.Hash{},
BestBlock: RegTestGenesisHash[0],
Timestamp:  RegTestGenesisBlock.Header.Timestamp,
Bits:      0x1f7fffff,
Nonce:      646,
Miner: creator,
}

var TestNet3GenesisHash = []chainhash.Hash{
chainhash.Hash{
0xcd, 0xfc, 0xaf, 0xc4, 0x57, 0x77, 0x78, 0x57,
0x68, 0x2d, 0x75, 0x34, 0x3f, 0x79, 0xc8, 0x90,
0x99, 0x63, 0x98, 0x9f, 0x7e, 0x7a, 0x9a, 0xfc,
0x45, 0x12, 0x2b, 0xa4, 0x08, 0xb9, 0x00, 0x00,
},
chainhash.Hash{
0x49, 0x0b, 0xdd, 0x0d, 0x06, 0xa0, 0xd2, 0x2f,
0x88, 0x83, 0x8c, 0x4b, 0xc0, 0x0f, 0x00, 0x41,
0x0a, 0x65, 0xcd, 0xa0, 0x32, 0xd5, 0xec, 0x9f,
0xd9, 0x8f, 0x1c, 0x74, 0x3b, 0x0f, 0x00, 0x00,
},
}

var TestNet3GenesisMerkleRoot = GenesisMerkleRoot

var test3netgenesisCoinbaseTx = genesisCoinbaseTx

var TestNet3GenesisBlock = wire.MsgBlock{
Header: wire.BlockHeader{
Version:    0x10000000,
PrevBlock:  chainhash.Hash{},
MerkleRoot: TestNet3GenesisMerkleRoot,
Timestamp:  time.Unix(0x5e508804, 0),
Nonce:      90891,
},
Transactions: []*wire.MsgTx{&test3netgenesisCoinbaseTx, &genesisInitPolygonTx},
}

var TestNet3GenesisMinerBlock = wire.MingingRightBlock{
Version:    TestNet3GenesisBlock.Header.Version,
PrevBlock:  chainhash.Hash{},
BestBlock: TestNet3GenesisHash[0],
Timestamp:  TestNet3GenesisBlock.Header.Timestamp,
Bits:      0x1f00ffff,
Nonce:      74371,
Miner: creator,
}

var SimNetGenesisHash = []chainhash.Hash{
chainhash.Hash{
0xe6, 0x7a, 0x7e, 0xd9, 0x9b, 0x49, 0x17, 0xd3,
0x06, 0x07, 0x1f, 0xf4, 0x8a, 0x93, 0x1c, 0x23,
0x7e, 0xe7, 0x82, 0x46, 0x20, 0x2a, 0xd9, 0xc8,
0x41, 0x66, 0x94, 0xe7, 0xd2, 0x74, 0x18, 0x00,
},
chainhash.Hash{
0xe0, 0x9d, 0x34, 0xad, 0x90, 0xf0, 0x86, 0x3f,
0x3d, 0xe6, 0x75, 0x3c, 0x49, 0xb9, 0x56, 0xa8,
0xde, 0x19, 0x17, 0xb6, 0x6d, 0x30, 0x22, 0xcd,
0xa2, 0xac, 0xfc, 0xeb, 0x58, 0xed, 0x30, 0x00,
},
}

var SimNetGenesisMerkleRoot = GenesisMerkleRoot

var simnetgenesisCoinbaseTx = genesisCoinbaseTx

var SimNetGenesisBlock = wire.MsgBlock{
Header: wire.BlockHeader{
Version:    0x10000000,
PrevBlock:  chainhash.Hash{},
MerkleRoot: SimNetGenesisMerkleRoot,
Timestamp:  time.Unix(0x5e508805, 0),
Nonce:      1197,
},
Transactions: []*wire.MsgTx{&simnetgenesisCoinbaseTx, &genesisInitPolygonTx},
}

var SimNetGenesisMinerBlock = wire.MingingRightBlock{
Version:    SimNetGenesisBlock.Header.Version,
PrevBlock:  chainhash.Hash{},
BestBlock: SimNetGenesisHash[0],
Timestamp:  SimNetGenesisBlock.Header.Timestamp,
Bits:      0x1f7fffff,
Nonce:      1369,
Miner: creator,
}
