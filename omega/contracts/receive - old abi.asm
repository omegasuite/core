; this is a lib for public use. it assumes the caller uses following params to store coins (type 0) received:
; utxotid, utxotseq, lastid, lastseq, balance

MALLOC gi0,8,		; alloc mem len for the result (code start)
EVAL32 gi0,4,		; length of result
EVAL32 gi4,BODY,	; result = the first instruction of contract body code.
STOP

define NETID 0x6f	; 0 for main net, 0x88 for contract, 0x6f for test net

; contract body
; input parameters
define INABI i8		; function ABI
define RESULT i12	; address for result
define txflag i20	; flag to pay min tax
define TX i28		; extra amount to pay

define BODY .
ALLOC ii0"8,360,
EVAL32 ii0"8,1,INABI,!
IF ii0"8,2,
RETURN

define UTXOTID ii0"8
define UTXOTIDDATA ii0"12
define UTXOTSEQ ii0"44
define UTXOTSEQDATA ii0"48

define LASTID ii0"52
define LASTIDDATA ii0"56
define LASTSEQ ii0"88
define LASTSEQDATA ii0"92

define tokentype ii0"108
define tokenval ii0"116
define scriptlen ii0"124
define scriptver ii0"128
define scriptstr ii0"129
define scriptfunc ii0"149

define OUTPOINT ii0'160

define ctr ii0"200
define contract ii0"204

define BALANCE ii0"232
define BALANCEDATA ii0"236

define txfees ii0"244
define outval ii0"252

define tmp ii0"288

GETCOIN tokentype,
META ctr,7,"address",

EVAL64 tmp,tokentype,0,!	; if coin type is not 0, return with fail
IF tmp,.fail,
IF txflag,.txfeeckd,
EVAL8 txflag,0,
EVAL64 tmp,tokenval,0,=		; if coin value is 0 & no fee, nothing to do.
IF tmp,.success,
; because it is a lib call, we are using the caller's storage

define txfeeckd .
LOAD BALANCE,abi("balance"),
LOAD LASTSEQ,abi("lastseq"),
LOAD LASTID,abi("lastid"),
LOAD UTXOTSEQ,abi("utxotseq"),
LOAD UTXOTID,abi("utxotid"),

RECEIVED OUTPOINT,
EVAL256 tmp,UTXOTIDDATA,x0,=		; first time received coin. make utxo the current one
IF tmp,.first,
EVAL256 tmp,LASTIDDATA,x0,=			; second time received coin. make last the current one
IF tmp,.second,
SPEND LASTIDDATA,LASTSEQDATA,
EVAL64 tmp,tokenval,0,=
IF tmp,.zero,
STORE abi("lastid"),HOUTPOINT,
STORE abi("lastseq"),DOUTPOINT"32,
IF 1,.txamount,

define zero .
STORE abi("lastid"),Hx0,
STORE abi("lastseq"),D0,

define txamount .
EVAL64 outval,BALANCEDATA,
EVAL64 BALANCEDATA,BALANCEDATA,tokenval,+
SPEND UTXOTIDDATA,UTXOTSEQDATA,
EVAL64 txfees,0,
IF txflag,2,
IF 1,2,
TXFEE txfees,2,
EVAL64 txfees,txfees,TX,+

EVAL64 outval,outval,txfees,-
EVAL64 tmp,outval,0,>
IF tmp,.normal,
; balance is not enough, use the entire balance as txfee
STORE abi("balance"),Qtokenval,
LOAD UTXOTSEQ,abi("lastseq"),
LOAD UTXOTID,abi("lastid"),		; read it instaed of using OUTPOINT because it could be 0
STORE abi("lastid"),Hx0,
STORE abi("lastseq"),D0,
STORE abi("utxotid"),HUTXOTIDDATA,
STORE abi("utxotseq"),DUTXOTSEQDATA,
IF 1,.insufficient,

define normal .
EVAL64 BALANCEDATA,BALANCEDATA,txfees,-
STORE abi("balance"),QBALANCEDATA,
STORE abi("utxotid"),HOUTPOINT,

EVAL64 tokenval,outval,
EVAL32 scriptlen,25,
EVAL8 scriptver,x88,
COPY scriptstr,contract,20,
EVAL32 scriptfunc,x41,			; pkhpubkey
ADDTXOUT i232,tokentype,
STORE abi("utxotseq"),Di232,		; seq of added txo
IF 1,.success,

define first .
EVAL64 tmp,tokenval,0,=
IF tmp,4,
STORE abi("utxotid"),HOUTPOINT,
STORE abi("utxotseq"),DOUTPOINT"32,
STORE abi("balance"),Qtokenval,
IF txflag,.insufficient,
IF 1,.success,

define second .
EVAL64 tmp,tokenval,0,=
IF tmp,3,
STORE abi("lastid"),HOUTPOINT,
STORE abi("lastseq"),DOUTPOINT"32,
IF txflag,.txamount,
EVAL64 BALANCEDATA,tokenval,BALANCEDATA,+
STORE abi("balance"),QBALANCEDATA,
IF 1,.success,

define fail .
EVAL64 tmp,RESULT,0,=
IF tmp,2,
EVAL8 iRESULT,1,
RETURN

define success .
EVAL64 tmp,RESULT,0,=
IF tmp,2,
EVAL8 iRESULT,0,
RETURN

define insufficient .
EVAL64 tmp,RESULT,0,=
IF tmp,2,
EVAL8 iRESULT,2,
RETURN





Rgi0,8,
Cgi0,4,
Cgi4,4,
z
Sii0"8,360,
Cii0"8,1,i8,!
Kii0"8,2,
Y
cii0"108,
kii0"200,7,x61646472657373,
Dii0"288,ii0"108,0,!
Kii0"288,68,
Ki20,4,
Ai20,0,
Dii0"288,ii0"116,0,=
Kii0"288,68,
Nii0"232,x01050705,
Nii0"88,x00070000,
Nii0"52,x02000205,
Nii0"44,x00060000,
Nii0"8,x06030000,
aii0'160,
Eii0"288,ii0"12,x0,=
Kii0"288,41,
Eii0"288,ii0"56,x0,=
Kii0"288,46,
eii0"56,ii0"92,
Dii0"288,ii0"116,0,=
Kii0"288,4,
Ox02000205,Hii0'160,
Ox00070000,Dii0'160"32,
K1,3,
Ox02000205,Hx0,
Ox00070000,D0,
Dii0"252,ii0"236,
Dii0"236,ii0"236,ii0"116,+
eii0"12,ii0"48,
Dii0"244,0,
Ki20,2,
K1,2,
bii0"244,2,
Dii0"244,ii0"244,i28,+
Dii0"252,ii0"252,ii0"244,-
Dii0"288,ii0"252,0,>
Kii0"288,9,
Ox01050705,Qii0"116,
Nii0"44,x00070000,
Nii0"8,x02000205,
Ox02000205,Hx0,
Ox00070000,D0,
Ox06030000,Hii0"12,
Ox00060000,Dii0"48,
K1,35,
Dii0"236,ii0"236,ii0"244,-
Ox01050705,Qii0"236,
Ox06030000,Hii0'160,
Dii0"116,ii0"252,
Cii0"124,25,
Aii0"128,x88,
Tii0"129,ii0"204,20,
Cii0"149,x41,
gi232,ii0"108,
Ox00060000,Di232,
K1,20,
Dii0"288,ii0"116,0,=
Kii0"288,4,
Ox06030000,Hii0'160,
Ox00060000,Dii0'160"32,
Ox01050705,Qii0"116,
Ki20,18,
K1,13,
Dii0"288,ii0"116,0,=
Kii0"288,3,
Ox02000205,Hii0'160,
Ox00070000,Dii0'160"32,
Ki20,n41,
Dii0"236,ii0"116,ii0"236,+
Ox01050705,Qii0"236,
K1,5,
Dii0"288,i12,0,=
Kii0"288,2,
Aii12,1,
Y
Dii0"288,i12,0,=
Kii0"288,2,
Aii12,0,
Y
Dii0"288,i12,0,=
Kii0"288,2,
Aii12,2,
Y

ceddcbdf1bc15a0feb4473df6578ec61445a48cb
88ceddcbdf1bc15a0feb4473df6578ec61445a48cb00000000526769302c382c0a436769302c342c0a436769342c342c0a7a0a5369693022382c3336302c0a4369693022382c312c69382c210a4b69693022382c322c0a590a63696930223130382c0a6b696930223230302c372c7836313634363437323635373337332c0a44696930223238382c696930223130382c302c210a4b696930223238382c36382c0a4b6932302c342c0a416932302c302c0a44696930223238382c696930223131362c302c3d0a4b696930223238382c36382c0a4e696930223233322c7830313035303730352c0a4e6969302238382c7830303037303030302c0a4e6969302235322c7830323030303230352c0a4e6969302234342c7830303036303030302c0a4e69693022382c7830363033303030302c0a61696930273136302c0a45696930223238382c6969302231322c78302c3d0a4b696930223238382c34312c0a45696930223238382c6969302235362c78302c3d0a4b696930223238382c34362c0a656969302235362c6969302239322c0a44696930223238382c696930223131362c302c3d0a4b696930223238382c342c0a4f7830323030303230352c48696930273136302c0a4f7830303037303030302c44696930273136302233322c0a4b312c332c0a4f7830323030303230352c4878302c0a4f7830303037303030302c44302c0a44696930223235322c696930223233362c0a44696930223233362c696930223233362c696930223131362c2b0a656969302231322c6969302234382c0a44696930223234342c302c0a4b6932302c322c0a4b312c322c0a62696930223234342c322c0a44696930223234342c696930223234342c6932382c2b0a44696930223235322c696930223235322c696930223234342c2d0a44696930223238382c696930223235322c302c3e0a4b696930223238382c392c0a4f7830313035303730352c51696930223131362c0a4e6969302234342c7830303037303030302c0a4e69693022382c7830323030303230352c0a4f7830323030303230352c4878302c0a4f7830303037303030302c44302c0a4f7830363033303030302c486969302231322c0a4f7830303036303030302c446969302234382c0a4b312c33352c0a44696930223233362c696930223233362c696930223234342c2d0a4f7830313035303730352c51696930223233362c0a4f7830363033303030302c48696930273136302c0a44696930223131362c696930223235322c0a43696930223132342c32352c0a41696930223132382c7838382c0a54696930223132392c696930223230342c32302c0a43696930223134392c7834312c0a67693233322c696930223130382c0a4f7830303036303030302c44693233322c0a4b312c32302c0a44696930223238382c696930223131362c302c3d0a4b696930223238382c342c0a4f7830363033303030302c48696930273136302c0a4f7830303036303030302c44696930273136302233322c0a4f7830313035303730352c51696930223131362c0a4b6932302c31382c0a4b312c31332c0a44696930223238382c696930223131362c302c3d0a4b696930223238382c332c0a4f7830323030303230352c48696930273136302c0a4f7830303037303030302c44696930273136302233322c0a4b6932302c6e34312c0a44696930223233362c696930223131362c696930223233362c2b0a4f7830313035303730352c51696930223233362c0a4b312c352c0a44696930223238382c6931322c302c3d0a4b696930223238382c322c0a41696931322c312c0a590a44696930223238382c6931322c302c3d0a4b696930223238382c322c0a41696931322c302c0a590a44696930223238382c6931322c302c3d0a4b696930223238382c322c0a41696931322c322c0a590a0a










Depolyment:
payment: f9e5955ac0814fd09264e16cd209719834aa475a5b05832b2c7bba64c46ee8c7 : 0 =>
	 (mz8JyMrJNGnGd7Jyz3s7BQabpKu89VHHoQ) 8fd1c0f9d280e3f2a3b1108ff66c1dd57269e8fadf84925c28e6e71b4ed27899 : 0
	 


	 